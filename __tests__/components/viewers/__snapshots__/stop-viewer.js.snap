// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components > viewers > stop viewer should render countdown times after midnight with no date if it is the previous day 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <injectIntl(WrappedComponent)>
      <WrappedComponent
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en-US",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en-US",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
      >
        <Connect(StopViewer)
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en-US",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en-US",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <StopViewer
            enableFavoriteStops={false}
            favoriteStops={Array []}
            fetchStopInfo={[Function]}
            findStopTimesForStop={[Function]}
            forgetStop={[Function]}
            homeTimezone="America/Los_Angeles"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en-US",
                "defaultRichTextElements": undefined,
                "formatDate": [Function],
                "formatDateTimeRange": [Function],
                "formatDateToParts": [Function],
                "formatDisplayName": [Function],
                "formatList": [Function],
                "formatListToParts": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getDisplayNames": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {},
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
                "wrapRichTextChunksInFragment": undefined,
              }
            }
            rememberStop={[Function]}
            setHoveredStop={[Function]}
            setLocation={[Function]}
            setMainPanelContent={[Function]}
            showNearbyStops={true}
            stopData={
              Object {
                "agencyName": "TriMet",
                "amenities": Array [
                  "Crosswalk near stop",
                  "Curb ramp near stop",
                  "Pavement at back door",
                  "Pavement at front door",
                  "Schedule display",
                  "Sidewalk at stop",
                  "Traffic signal",
                ],
                "code": "9860",
                "desc": "Eastbound stop in Portland (Stop ID 9860)",
                "id": "TriMet:9860",
                "lat": 45.522919,
                "lon": -122.689717,
                "mode": "BUS",
                "name": "W Burnside & SW 18th",
                "routes": Array [
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:20",
                    "longName": "Burnside/Stark",
                    "mode": "BUS",
                    "shortName": "20",
                    "sortOrder": 2600,
                    "sortOrderSet": true,
                    "type": 3,
                  },
                ],
                "rsn": "20",
                "stopTimes": Array [
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2041",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 89460,
                        "realtimeDeparture": 89460,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 89460,
                        "scheduledDeparture": 89460,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230375",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2043",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 93120,
                        "realtimeDeparture": 93120,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 93120,
                        "scheduledDeparture": 93120,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230376",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2049",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 96780,
                        "realtimeDeparture": 96780,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 96780,
                        "scheduledDeparture": 96780,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230377",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:01",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2067",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 13980,
                        "realtimeDeparture": 13980,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 13980,
                        "scheduledDeparture": 13980,
                        "serviceDay": 1565247600,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230305",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2034",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 17580,
                        "realtimeDeparture": 17580,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 17580,
                        "scheduledDeparture": 17580,
                        "serviceDay": 1565247600,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230306",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2069",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 19020,
                        "realtimeDeparture": 19020,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 19020,
                        "scheduledDeparture": 19020,
                        "serviceDay": 1565247600,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230307",
                      },
                    ],
                  },
                ],
                "stopTimesLastUpdated": 1565248650040,
                "type": 3,
                "url": "http://trimet.org/#tracker/stop/9860",
              }
            }
            stopViewerConfig={
              Object {
                "nearbyRadius": 250,
                "numberOfDepartures": 3,
                "showBlockIds": false,
                "timeRange": 345600,
              }
            }
            toggleAutoRefresh={[Function]}
            transitOperators={Array []}
            viewedStop={
              Object {
                "stopId": "TriMet:9860",
              }
            }
            zoomToStop={[Function]}
          >
            <div
              className="stop-viewer"
            >
              <div
                className="stop-viewer-header"
              >
                <div
                  className="back-button-container"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="btn btn-sm btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "ArrowLeft",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <ArrowLeft>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="m257.5 445.1-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </ArrowLeft>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="common.forms.back"
                        >
                          common.forms.back
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </Button>
                </div>
                <div
                  className="header-text"
                >
                  <span>
                    W Burnside & SW 18th
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "clear": "both",
                    }
                  }
                />
              </div>
              <div
                className="stop-viewer-body"
              >
                <div
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  <div>
                    <FormattedMessage
                      id="components.StopViewer.displayStopId"
                      values={
                        Object {
                          "stopId": "9860",
                          "strong": [Function],
                        }
                      }
                    >
                      components.StopViewer.displayStopId
                    </FormattedMessage>
                    <button
                      className="link-button"
                      onClick={[Function]}
                      title="components.StopViewer.zoomToStop"
                    >
                      <Icon
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Search",
                            "render": [Function],
                          }
                        }
                        style={
                          Object {
                            "marginLeft": "0.2em",
                          }
                        }
                      >
                        <styled.span
                          style={
                            Object {
                              "marginLeft": "0.2em",
                            }
                          }
                        >
                          <span
                            className="sc-gInthZ dOezsE"
                            style={
                              Object {
                                "marginLeft": "0.2em",
                              }
                            }
                          >
                            <Search>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 512 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 512 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7 405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Search>
                          </span>
                        </styled.span>
                      </Icon>
                    </button>
                    <button
                      className="link-button pull-right"
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "small",
                        }
                      }
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Calendar",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <Calendar>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Calendar>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="components.StopViewer.viewSchedule"
                        >
                          components.StopViewer.viewSchedule
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </div>
                  <FromToLocationPicker
                    label={true}
                    onFromClick={[Function]}
                    onToClick={[Function]}
                  >
                    <strong>
                      <FormattedMessage
                        description="Label to prompt the user to plan a trip"
                        id="otpUi.FromToLocationPicker.planATrip"
                      >
                        otpUi.FromToLocationPicker.planATrip
                      </FormattedMessage>
                    </strong>
                    <styled__FromToPickerSpan>
                      <span
                        className="styled__FromToPickerSpan-sc-vb4790-1 dWHacc"
                      >
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="from"
                            >
                              <styled__FromIcon
                                className=""
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <DotCircle
                                  className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                  size="0.9em"
                                  title="From Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                    size="0.9em"
                                    title="From Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                      size="0.9em"
                                      title="From Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 512 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          From Location Icon
                                        </title>
                                        <path
                                          d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </DotCircle>
                              </styled__FromIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'from' button of the picker"
                                  id="otpUi.FromToLocationPicker.from"
                                >
                                  otpUi.FromToLocationPicker.from
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="to"
                            >
                              <styled__ToIcon
                                className=""
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <MapMarkerAlt
                                  className="styled__ToIcon-n5xcvc-2 bCTefk"
                                  size="0.9em"
                                  title="To Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__ToIcon-n5xcvc-2 bCTefk"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 384 512"
                                    size="0.9em"
                                    title="To Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 384 512"
                                      size="0.9em"
                                      title="To Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 384 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          To Location Icon
                                        </title>
                                        <path
                                          d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </MapMarkerAlt>
                              </styled__ToIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'to' button of the picker"
                                  id="otpUi.FromToLocationPicker.to"
                                >
                                  otpUi.FromToLocationPicker.to
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                      </span>
                    </styled__FromToPickerSpan>
                  </FromToLocationPicker>
                </div>
                <styled.div>
                  <div
                    className="sc-gyUflj heQDAy"
                  >
                    <LiveStopTimes
                      findStopTimesForStop={[Function]}
                      homeTimezone="America/Los_Angeles"
                      setHoveredStop={[Function]}
                      showNearbyStops={true}
                      stopData={
                        Object {
                          "agencyName": "TriMet",
                          "amenities": Array [
                            "Crosswalk near stop",
                            "Curb ramp near stop",
                            "Pavement at back door",
                            "Pavement at front door",
                            "Schedule display",
                            "Sidewalk at stop",
                            "Traffic signal",
                          ],
                          "code": "9860",
                          "desc": "Eastbound stop in Portland (Stop ID 9860)",
                          "id": "TriMet:9860",
                          "lat": 45.522919,
                          "lon": -122.689717,
                          "mode": "BUS",
                          "name": "W Burnside & SW 18th",
                          "routes": Array [
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            },
                          ],
                          "rsn": "20",
                          "stopTimes": Array [
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2041",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 89460,
                                  "realtimeDeparture": 89460,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 89460,
                                  "scheduledDeparture": 89460,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230375",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2043",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 93120,
                                  "realtimeDeparture": 93120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 93120,
                                  "scheduledDeparture": 93120,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230376",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2049",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 96780,
                                  "realtimeDeparture": 96780,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 96780,
                                  "scheduledDeparture": 96780,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230377",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:01",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2067",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 13980,
                                  "realtimeDeparture": 13980,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 13980,
                                  "scheduledDeparture": 13980,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230305",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2034",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 17580,
                                  "realtimeDeparture": 17580,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 17580,
                                  "scheduledDeparture": 17580,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230306",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2069",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 19020,
                                  "realtimeDeparture": 19020,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 19020,
                                  "scheduledDeparture": 19020,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230307",
                                },
                              ],
                            },
                          ],
                          "stopTimesLastUpdated": 1565248650040,
                          "type": 3,
                          "url": "http://trimet.org/#tracker/stop/9860",
                        }
                      }
                      stopViewerConfig={
                        Object {
                          "nearbyRadius": 250,
                          "numberOfDepartures": 3,
                          "showBlockIds": false,
                          "timeRange": 345600,
                        }
                      }
                      toggleAutoRefresh={[Function]}
                      transitOperators={Array []}
                      viewedStop={
                        Object {
                          "stopId": "TriMet:9860",
                        }
                      }
                    >
                      <div>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:20-Gresham TC"
                          pattern={
                            Object {
                              "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                              "headsign": "Gresham TC",
                              "id": "TriMet:20:1:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2041",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 89460,
                                "realtimeDeparture": 89460,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 89460,
                                "scheduledDeparture": 89460,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230375",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2043",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 93120,
                                "realtimeDeparture": 93120,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 93120,
                                "scheduledDeparture": 93120,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230376",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2049",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 96780,
                                "realtimeDeparture": 96780,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 96780,
                                "scheduledDeparture": 96780,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230377",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2067",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 13980,
                                "realtimeDeparture": 13980,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 13980,
                                "scheduledDeparture": 13980,
                                "serviceDay": 1565247600,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230305",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2034",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 17580,
                                "realtimeDeparture": 17580,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 17580,
                                "scheduledDeparture": 17580,
                                "serviceDay": 1565247600,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230306",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2069",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 19020,
                                "realtimeDeparture": 19020,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 19020,
                                "scheduledDeparture": 19020,
                                "serviceDay": 1565247600,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230307",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:20",
                                "longName": "Burnside/Stark",
                                "mode": "BUS",
                                "shortName": "20",
                                "sortOrder": 2600,
                                "sortOrderSet": true,
                                "type": 3,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2041",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 89460,
                                  "realtimeDeparture": 89460,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 89460,
                                  "scheduledDeparture": 89460,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230375",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2043",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 93120,
                                  "realtimeDeparture": 93120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 93120,
                                  "scheduledDeparture": 93120,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230376",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2049",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 96780,
                                  "realtimeDeparture": 96780,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 96780,
                                  "scheduledDeparture": 96780,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230377",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2067",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 13980,
                                  "realtimeDeparture": 13980,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 13980,
                                  "scheduledDeparture": 13980,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230305",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2034",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 17580,
                                  "realtimeDeparture": 17580,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 17580,
                                  "scheduledDeparture": 17580,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230306",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2069",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 19020,
                                  "realtimeDeparture": 19020,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 19020,
                                  "scheduledDeparture": 19020,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230307",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Burnside/Stark",
                                          "routeShortName": "20",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          20
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Gresham TC",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2041",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 89460,
                                        "realtimeDeparture": 89460,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 89460,
                                        "scheduledDeparture": 89460,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230375",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 14,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                        >
                                          <FormattedDuration
                                            duration={3124}
                                          >
                                            <FormattedMessage
                                              id="common.time.tripDurationFormat"
                                              values={
                                                Object {
                                                  "hours": 0,
                                                  "minutes": 52,
                                                }
                                              }
                                            >
                                              common.time.tripDurationFormat
                                            </FormattedMessage>
                                          </FormattedDuration>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-20"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-20"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2041",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 89460,
                                                  "realtimeDeparture": 89460,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 89460,
                                                  "scheduledDeparture": 89460,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230375",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 14,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <FormattedDuration
                                                      duration={3124}
                                                    >
                                                      <FormattedMessage
                                                        id="common.time.tripDurationFormat"
                                                        values={
                                                          Object {
                                                            "hours": 0,
                                                            "minutes": 52,
                                                          }
                                                        }
                                                      >
                                                        common.time.tripDurationFormat
                                                      </FormattedMessage>
                                                    </FormattedDuration>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2043",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 93120,
                                                  "realtimeDeparture": 93120,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 93120,
                                                  "scheduledDeparture": 93120,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230376",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="thursday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.thursday"
                                                      >
                                                        common.daysOfWeek.thursday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2043",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 93120,
                                                          "realtimeDeparture": 93120,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 93120,
                                                          "scheduledDeparture": 93120,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:9860",
                                                          "stopIndex": 38,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9230376",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-08T08:52:00.000Z}
                                                      >
                                                        1:52 AM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2049",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 96780,
                                                  "realtimeDeparture": 96780,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 96780,
                                                  "scheduledDeparture": 96780,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230377",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="thursday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.thursday"
                                                      >
                                                        common.daysOfWeek.thursday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2049",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 96780,
                                                          "realtimeDeparture": 96780,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 96780,
                                                          "scheduledDeparture": 96780,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:9860",
                                                          "stopIndex": 38,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9230377",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-08T09:53:00.000Z}
                                                      >
                                                        2:53 AM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                      </div>
                      <div
                        style={
                          Object {
                            "marginTop": "20px",
                          }
                        }
                      >
                        <label
                          style={
                            Object {
                              "fontSize": "small",
                              "fontWeight": 300,
                            }
                          }
                        >
                          <styled.span
                            margin={0.25}
                          >
                            <span
                              className="sc-jXktde fKyBCi"
                            >
                              <input
                                name="autoUpdate"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </span>
                          </styled.span>
                          <FormattedMessage
                            id="components.LiveStopTimes.autoRefresh"
                          >
                            components.LiveStopTimes.autoRefresh
                          </FormattedMessage>
                        </label>
                        <button
                          className="link-button pull-right percy-hide"
                          onClick={[Function]}
                          style={
                            Object {
                              "fontSize": "small",
                            }
                          }
                        >
                          <IconWithText
                            Icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Redo",
                                "render": [Function],
                              }
                            }
                            spin={true}
                          >
                            <Styled(styled.span)>
                              <span
                                className="sc-gInthZ sc-euMpEg dOezsE KEner"
                              >
                                <Redo>
                                  <StyledIconBase
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="StyledIconBase-ea9ulj-0 iuNRof"
                                        fill="currentColor"
                                        focusable="false"
                                        viewBox="0 0 512 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </Redo>
                              </span>
                            </Styled(styled.span)>
                            <FormattedTime
                              timeStyle="short"
                              timeZone="America/Los_Angeles"
                              value={1565248650040}
                            >
                              12:17 AM
                            </FormattedTime>
                          </IconWithText>
                        </button>
                        <RelatedStopsPanel
                          homeTimezone="America/Los_Angeles"
                          setHoveredStop={[Function]}
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                                "Traffic signal",
                              ],
                              "code": "9860",
                              "desc": "Eastbound stop in Portland (Stop ID 9860)",
                              "id": "TriMet:9860",
                              "lat": 45.522919,
                              "lon": -122.689717,
                              "mode": "BUS",
                              "name": "W Burnside & SW 18th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2041",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 89460,
                                      "realtimeDeparture": 89460,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 89460,
                                      "scheduledDeparture": 89460,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230375",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2043",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 93120,
                                      "realtimeDeparture": 93120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 93120,
                                      "scheduledDeparture": 93120,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230376",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2049",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 96780,
                                      "realtimeDeparture": 96780,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 96780,
                                      "scheduledDeparture": 96780,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230377",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2067",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 13980,
                                      "realtimeDeparture": 13980,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 13980,
                                      "scheduledDeparture": 13980,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230305",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2034",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 17580,
                                      "realtimeDeparture": 17580,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 17580,
                                      "scheduledDeparture": 17580,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230306",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2069",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 19020,
                                      "realtimeDeparture": 19020,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 19020,
                                      "scheduledDeparture": 19020,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230307",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565248650040,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/9860",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <RelatedPanel
                            expanded={false}
                            onToggleExpanded={[Function]}
                            title={
                              <Memo(MemoizedFormattedMessage)
                                id="components.RelatedStopsPanel.relatedStops"
                              />
                            }
                            titleWidth="13ch"
                          >
                            <h4
                              className="related-panel-title"
                              style={
                                Object {
                                  "width": "13ch",
                                }
                              }
                            >
                              <FormattedMessage
                                id="components.RelatedStopsPanel.relatedStops"
                              >
                                components.RelatedStopsPanel.relatedStops
                              </FormattedMessage>
                            </h4>
                            <div
                              className="related-panel-container"
                            >
                              <ul
                                className="related-items-list list-unstyled"
                              />
                            </div>
                          </RelatedPanel>
                        </RelatedStopsPanel>
                        <Connect(injectIntl(AmenitiesPanel))
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                                "Traffic signal",
                              ],
                              "code": "9860",
                              "desc": "Eastbound stop in Portland (Stop ID 9860)",
                              "id": "TriMet:9860",
                              "lat": 45.522919,
                              "lon": -122.689717,
                              "mode": "BUS",
                              "name": "W Burnside & SW 18th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2041",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 89460,
                                      "realtimeDeparture": 89460,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 89460,
                                      "scheduledDeparture": 89460,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230375",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2043",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 93120,
                                      "realtimeDeparture": 93120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 93120,
                                      "scheduledDeparture": 93120,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230376",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2049",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 96780,
                                      "realtimeDeparture": 96780,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 96780,
                                      "scheduledDeparture": 96780,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230377",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2067",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 13980,
                                      "realtimeDeparture": 13980,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 13980,
                                      "scheduledDeparture": 13980,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230305",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2034",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 17580,
                                      "realtimeDeparture": 17580,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 17580,
                                      "scheduledDeparture": 17580,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230306",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2069",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 19020,
                                      "realtimeDeparture": 19020,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 19020,
                                      "scheduledDeparture": 19020,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230307",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565248650040,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/9860",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <injectIntl(AmenitiesPanel)
                            stopData={
                              Object {
                                "agencyName": "TriMet",
                                "amenities": Array [
                                  "Crosswalk near stop",
                                  "Curb ramp near stop",
                                  "Pavement at back door",
                                  "Pavement at front door",
                                  "Schedule display",
                                  "Sidewalk at stop",
                                  "Traffic signal",
                                ],
                                "code": "9860",
                                "desc": "Eastbound stop in Portland (Stop ID 9860)",
                                "id": "TriMet:9860",
                                "lat": 45.522919,
                                "lon": -122.689717,
                                "mode": "BUS",
                                "name": "W Burnside & SW 18th",
                                "routes": Array [
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:20",
                                    "longName": "Burnside/Stark",
                                    "mode": "BUS",
                                    "shortName": "20",
                                    "sortOrder": 2600,
                                    "sortOrderSet": true,
                                    "type": 3,
                                  },
                                ],
                                "rsn": "20",
                                "stopTimes": Array [
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2041",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 89460,
                                        "realtimeDeparture": 89460,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 89460,
                                        "scheduledDeparture": 89460,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230375",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2043",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 93120,
                                        "realtimeDeparture": 93120,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 93120,
                                        "scheduledDeparture": 93120,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230376",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2049",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 96780,
                                        "realtimeDeparture": 96780,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 96780,
                                        "scheduledDeparture": 96780,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230377",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:01",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2067",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 13980,
                                        "realtimeDeparture": 13980,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 13980,
                                        "scheduledDeparture": 13980,
                                        "serviceDay": 1565247600,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230305",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2034",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 17580,
                                        "realtimeDeparture": 17580,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 17580,
                                        "scheduledDeparture": 17580,
                                        "serviceDay": 1565247600,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230306",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2069",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 19020,
                                        "realtimeDeparture": 19020,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 19020,
                                        "scheduledDeparture": 19020,
                                        "serviceDay": 1565247600,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230307",
                                      },
                                    ],
                                  },
                                ],
                                "stopTimesLastUpdated": 1565248650040,
                                "type": 3,
                                "url": "http://trimet.org/#tracker/stop/9860",
                              }
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <AmenitiesPanel
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en-US",
                                  "defaultRichTextElements": undefined,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en-US",
                                  "messages": Object {},
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              stopData={
                                Object {
                                  "agencyName": "TriMet",
                                  "amenities": Array [
                                    "Crosswalk near stop",
                                    "Curb ramp near stop",
                                    "Pavement at back door",
                                    "Pavement at front door",
                                    "Schedule display",
                                    "Sidewalk at stop",
                                    "Traffic signal",
                                  ],
                                  "code": "9860",
                                  "desc": "Eastbound stop in Portland (Stop ID 9860)",
                                  "id": "TriMet:9860",
                                  "lat": 45.522919,
                                  "lon": -122.689717,
                                  "mode": "BUS",
                                  "name": "W Burnside & SW 18th",
                                  "routes": Array [
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:20",
                                      "longName": "Burnside/Stark",
                                      "mode": "BUS",
                                      "shortName": "20",
                                      "sortOrder": 2600,
                                      "sortOrderSet": true,
                                      "type": 3,
                                    },
                                  ],
                                  "rsn": "20",
                                  "stopTimes": Array [
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2041",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 89460,
                                          "realtimeDeparture": 89460,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 89460,
                                          "scheduledDeparture": 89460,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230375",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2043",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 93120,
                                          "realtimeDeparture": 93120,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 93120,
                                          "scheduledDeparture": 93120,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230376",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2049",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 96780,
                                          "realtimeDeparture": 96780,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 96780,
                                          "scheduledDeparture": 96780,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230377",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:01",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2067",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 13980,
                                          "realtimeDeparture": 13980,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 13980,
                                          "scheduledDeparture": 13980,
                                          "serviceDay": 1565247600,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230305",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2034",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 17580,
                                          "realtimeDeparture": 17580,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 17580,
                                          "scheduledDeparture": 17580,
                                          "serviceDay": 1565247600,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230306",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2069",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 19020,
                                          "realtimeDeparture": 19020,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 19020,
                                          "scheduledDeparture": 19020,
                                          "serviceDay": 1565247600,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230307",
                                        },
                                      ],
                                    },
                                  ],
                                  "stopTimesLastUpdated": 1565248650040,
                                  "type": 3,
                                  "url": "http://trimet.org/#tracker/stop/9860",
                                }
                              }
                              stopViewerConfig={
                                Object {
                                  "nearbyRadius": 250,
                                  "numberOfDepartures": 3,
                                  "showBlockIds": false,
                                  "timeRange": 345600,
                                }
                              }
                            >
                              <RelatedPanel
                                expanded={false}
                                onToggleExpanded={[Function]}
                                title="components.AmenitiesPanel.nearbyAmenities"
                                titleWidth="16ch"
                              >
                                <h4
                                  className="related-panel-title"
                                  style={
                                    Object {
                                      "width": "16ch",
                                    }
                                  }
                                >
                                  components.AmenitiesPanel.nearbyAmenities
                                </h4>
                                <div
                                  className="related-panel-container"
                                >
                                  <ul
                                    className="related-items-list list-unstyled"
                                  >
                                    <li
                                      className="related-item"
                                    >
                                      <div
                                        className="item-label"
                                      >
                                        <styled.div>
                                          <div
                                            className="sc-eFuaqX eZHYvB"
                                          >
                                            P
                                          </div>
                                        </styled.div>
                                        <FormattedMessage
                                          id="components.AmenitiesPanel.noPRLotsFound"
                                        >
                                          components.AmenitiesPanel.noPRLotsFound
                                        </FormattedMessage>
                                      </div>
                                    </li>
                                  </ul>
                                </div>
                              </RelatedPanel>
                            </AmenitiesPanel>
                          </injectIntl(AmenitiesPanel)>
                        </Connect(injectIntl(AmenitiesPanel))>
                      </div>
                    </LiveStopTimes>
                  </div>
                </styled.div>
              </div>
            </div>
          </StopViewer>
        </Connect(StopViewer)>
      </WrappedComponent>
    </injectIntl(WrappedComponent)>
  </Provider>
</IntlProvider>
`;

exports[`components > viewers > stop viewer should render countdown times for stop times departing 48+ hours from start of service 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <injectIntl(WrappedComponent)>
      <WrappedComponent
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en-US",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en-US",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
      >
        <Connect(StopViewer)
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en-US",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en-US",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <StopViewer
            enableFavoriteStops={false}
            favoriteStops={Array []}
            fetchStopInfo={[Function]}
            findStopTimesForStop={[Function]}
            forgetStop={[Function]}
            homeTimezone="America/Los_Angeles"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en-US",
                "defaultRichTextElements": undefined,
                "formatDate": [Function],
                "formatDateTimeRange": [Function],
                "formatDateToParts": [Function],
                "formatDisplayName": [Function],
                "formatList": [Function],
                "formatListToParts": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getDisplayNames": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {},
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
                "wrapRichTextChunksInFragment": undefined,
              }
            }
            rememberStop={[Function]}
            setHoveredStop={[Function]}
            setLocation={[Function]}
            setMainPanelContent={[Function]}
            showNearbyStops={true}
            stopData={
              Object {
                "agencyName": "TriMet",
                "amenities": Array [
                  "Crosswalk near stop",
                  "Curb ramp near stop",
                  "Pavement at back door",
                  "Pavement at front door",
                  "Schedule display",
                  "Sidewalk at stop",
                  "Traffic signal",
                ],
                "code": "9860",
                "desc": "Eastbound stop in Portland (Stop ID 9860)",
                "id": "TriMet:9860",
                "lat": 45.522919,
                "lon": -122.689717,
                "mode": "BUS",
                "name": "W Burnside & SW 18th",
                "routes": Array [
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:20",
                    "longName": "Burnside/Stark",
                    "mode": "BUS",
                    "shortName": "20",
                    "sortOrder": 2600,
                    "sortOrderSet": true,
                    "type": 3,
                  },
                ],
                "rsn": "20",
                "stopTimes": Array [
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2041",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 175860,
                        "realtimeDeparture": 175860,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 175860,
                        "scheduledDeparture": 175860,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230375",
                      },
                    ],
                  },
                ],
                "stopTimesLastUpdated": 1565248650040,
                "type": 3,
                "url": "http://trimet.org/#tracker/stop/9860",
              }
            }
            stopViewerConfig={
              Object {
                "nearbyRadius": 250,
                "numberOfDepartures": 3,
                "showBlockIds": false,
                "timeRange": 345600,
              }
            }
            toggleAutoRefresh={[Function]}
            transitOperators={Array []}
            viewedStop={
              Object {
                "stopId": "TriMet:9860",
              }
            }
            zoomToStop={[Function]}
          >
            <div
              className="stop-viewer"
            >
              <div
                className="stop-viewer-header"
              >
                <div
                  className="back-button-container"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="btn btn-sm btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "ArrowLeft",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <ArrowLeft>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="m257.5 445.1-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </ArrowLeft>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="common.forms.back"
                        >
                          common.forms.back
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </Button>
                </div>
                <div
                  className="header-text"
                >
                  <span>
                    W Burnside & SW 18th
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "clear": "both",
                    }
                  }
                />
              </div>
              <div
                className="stop-viewer-body"
              >
                <div
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  <div>
                    <FormattedMessage
                      id="components.StopViewer.displayStopId"
                      values={
                        Object {
                          "stopId": "9860",
                          "strong": [Function],
                        }
                      }
                    >
                      components.StopViewer.displayStopId
                    </FormattedMessage>
                    <button
                      className="link-button"
                      onClick={[Function]}
                      title="components.StopViewer.zoomToStop"
                    >
                      <Icon
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Search",
                            "render": [Function],
                          }
                        }
                        style={
                          Object {
                            "marginLeft": "0.2em",
                          }
                        }
                      >
                        <styled.span
                          style={
                            Object {
                              "marginLeft": "0.2em",
                            }
                          }
                        >
                          <span
                            className="sc-gInthZ dOezsE"
                            style={
                              Object {
                                "marginLeft": "0.2em",
                              }
                            }
                          >
                            <Search>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 512 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 512 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7 405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Search>
                          </span>
                        </styled.span>
                      </Icon>
                    </button>
                    <button
                      className="link-button pull-right"
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "small",
                        }
                      }
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Calendar",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <Calendar>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Calendar>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="components.StopViewer.viewSchedule"
                        >
                          components.StopViewer.viewSchedule
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </div>
                  <FromToLocationPicker
                    label={true}
                    onFromClick={[Function]}
                    onToClick={[Function]}
                  >
                    <strong>
                      <FormattedMessage
                        description="Label to prompt the user to plan a trip"
                        id="otpUi.FromToLocationPicker.planATrip"
                      >
                        otpUi.FromToLocationPicker.planATrip
                      </FormattedMessage>
                    </strong>
                    <styled__FromToPickerSpan>
                      <span
                        className="styled__FromToPickerSpan-sc-vb4790-1 dWHacc"
                      >
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="from"
                            >
                              <styled__FromIcon
                                className=""
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <DotCircle
                                  className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                  size="0.9em"
                                  title="From Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                    size="0.9em"
                                    title="From Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                      size="0.9em"
                                      title="From Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 512 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          From Location Icon
                                        </title>
                                        <path
                                          d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </DotCircle>
                              </styled__FromIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'from' button of the picker"
                                  id="otpUi.FromToLocationPicker.from"
                                >
                                  otpUi.FromToLocationPicker.from
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="to"
                            >
                              <styled__ToIcon
                                className=""
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <MapMarkerAlt
                                  className="styled__ToIcon-n5xcvc-2 bCTefk"
                                  size="0.9em"
                                  title="To Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__ToIcon-n5xcvc-2 bCTefk"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 384 512"
                                    size="0.9em"
                                    title="To Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 384 512"
                                      size="0.9em"
                                      title="To Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 384 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          To Location Icon
                                        </title>
                                        <path
                                          d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </MapMarkerAlt>
                              </styled__ToIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'to' button of the picker"
                                  id="otpUi.FromToLocationPicker.to"
                                >
                                  otpUi.FromToLocationPicker.to
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                      </span>
                    </styled__FromToPickerSpan>
                  </FromToLocationPicker>
                </div>
                <styled.div>
                  <div
                    className="sc-gyUflj heQDAy"
                  >
                    <LiveStopTimes
                      findStopTimesForStop={[Function]}
                      homeTimezone="America/Los_Angeles"
                      setHoveredStop={[Function]}
                      showNearbyStops={true}
                      stopData={
                        Object {
                          "agencyName": "TriMet",
                          "amenities": Array [
                            "Crosswalk near stop",
                            "Curb ramp near stop",
                            "Pavement at back door",
                            "Pavement at front door",
                            "Schedule display",
                            "Sidewalk at stop",
                            "Traffic signal",
                          ],
                          "code": "9860",
                          "desc": "Eastbound stop in Portland (Stop ID 9860)",
                          "id": "TriMet:9860",
                          "lat": 45.522919,
                          "lon": -122.689717,
                          "mode": "BUS",
                          "name": "W Burnside & SW 18th",
                          "routes": Array [
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            },
                          ],
                          "rsn": "20",
                          "stopTimes": Array [
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2041",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 175860,
                                  "realtimeDeparture": 175860,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 175860,
                                  "scheduledDeparture": 175860,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230375",
                                },
                              ],
                            },
                          ],
                          "stopTimesLastUpdated": 1565248650040,
                          "type": 3,
                          "url": "http://trimet.org/#tracker/stop/9860",
                        }
                      }
                      stopViewerConfig={
                        Object {
                          "nearbyRadius": 250,
                          "numberOfDepartures": 3,
                          "showBlockIds": false,
                          "timeRange": 345600,
                        }
                      }
                      toggleAutoRefresh={[Function]}
                      transitOperators={Array []}
                      viewedStop={
                        Object {
                          "stopId": "TriMet:9860",
                        }
                      }
                    >
                      <div>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:20-Gresham TC"
                          pattern={
                            Object {
                              "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                              "headsign": "Gresham TC",
                              "id": "TriMet:20:1:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2041",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 175860,
                                "realtimeDeparture": 175860,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 175860,
                                "scheduledDeparture": 175860,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230375",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:20",
                                "longName": "Burnside/Stark",
                                "mode": "BUS",
                                "shortName": "20",
                                "sortOrder": 2600,
                                "sortOrderSet": true,
                                "type": 3,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2041",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 175860,
                                  "realtimeDeparture": 175860,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 175860,
                                  "scheduledDeparture": 175860,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230375",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Burnside/Stark",
                                          "routeShortName": "20",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          20
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Gresham TC",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2041",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 175860,
                                        "realtimeDeparture": 175860,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 175860,
                                        "scheduledDeparture": 175860,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230375",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 14,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                        >
                                          <FormattedDuration
                                            duration={3124}
                                          >
                                            <FormattedMessage
                                              id="common.time.tripDurationFormat"
                                              values={
                                                Object {
                                                  "hours": 0,
                                                  "minutes": 52,
                                                }
                                              }
                                            >
                                              common.time.tripDurationFormat
                                            </FormattedMessage>
                                          </FormattedDuration>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-20"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-20"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2041",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 175860,
                                                  "realtimeDeparture": 175860,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 175860,
                                                  "scheduledDeparture": 175860,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230375",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 14,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <FormattedDuration
                                                      duration={3124}
                                                    >
                                                      <FormattedMessage
                                                        id="common.time.tripDurationFormat"
                                                        values={
                                                          Object {
                                                            "hours": 0,
                                                            "minutes": 52,
                                                          }
                                                        }
                                                      >
                                                        common.time.tripDurationFormat
                                                      </FormattedMessage>
                                                    </FormattedDuration>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                      </div>
                      <div
                        style={
                          Object {
                            "marginTop": "20px",
                          }
                        }
                      >
                        <label
                          style={
                            Object {
                              "fontSize": "small",
                              "fontWeight": 300,
                            }
                          }
                        >
                          <styled.span
                            margin={0.25}
                          >
                            <span
                              className="sc-jXktde fKyBCi"
                            >
                              <input
                                name="autoUpdate"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </span>
                          </styled.span>
                          <FormattedMessage
                            id="components.LiveStopTimes.autoRefresh"
                          >
                            components.LiveStopTimes.autoRefresh
                          </FormattedMessage>
                        </label>
                        <button
                          className="link-button pull-right percy-hide"
                          onClick={[Function]}
                          style={
                            Object {
                              "fontSize": "small",
                            }
                          }
                        >
                          <IconWithText
                            Icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Redo",
                                "render": [Function],
                              }
                            }
                            spin={true}
                          >
                            <Styled(styled.span)>
                              <span
                                className="sc-gInthZ sc-euMpEg dOezsE KEner"
                              >
                                <Redo>
                                  <StyledIconBase
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="StyledIconBase-ea9ulj-0 iuNRof"
                                        fill="currentColor"
                                        focusable="false"
                                        viewBox="0 0 512 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </Redo>
                              </span>
                            </Styled(styled.span)>
                            <FormattedTime
                              timeStyle="short"
                              timeZone="America/Los_Angeles"
                              value={1565248650040}
                            >
                              12:17 AM
                            </FormattedTime>
                          </IconWithText>
                        </button>
                        <RelatedStopsPanel
                          homeTimezone="America/Los_Angeles"
                          setHoveredStop={[Function]}
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                                "Traffic signal",
                              ],
                              "code": "9860",
                              "desc": "Eastbound stop in Portland (Stop ID 9860)",
                              "id": "TriMet:9860",
                              "lat": 45.522919,
                              "lon": -122.689717,
                              "mode": "BUS",
                              "name": "W Burnside & SW 18th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2041",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 175860,
                                      "realtimeDeparture": 175860,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 175860,
                                      "scheduledDeparture": 175860,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230375",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565248650040,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/9860",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <RelatedPanel
                            expanded={false}
                            onToggleExpanded={[Function]}
                            title={
                              <Memo(MemoizedFormattedMessage)
                                id="components.RelatedStopsPanel.relatedStops"
                              />
                            }
                            titleWidth="13ch"
                          >
                            <h4
                              className="related-panel-title"
                              style={
                                Object {
                                  "width": "13ch",
                                }
                              }
                            >
                              <FormattedMessage
                                id="components.RelatedStopsPanel.relatedStops"
                              >
                                components.RelatedStopsPanel.relatedStops
                              </FormattedMessage>
                            </h4>
                            <div
                              className="related-panel-container"
                            >
                              <ul
                                className="related-items-list list-unstyled"
                              />
                            </div>
                          </RelatedPanel>
                        </RelatedStopsPanel>
                        <Connect(injectIntl(AmenitiesPanel))
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                                "Traffic signal",
                              ],
                              "code": "9860",
                              "desc": "Eastbound stop in Portland (Stop ID 9860)",
                              "id": "TriMet:9860",
                              "lat": 45.522919,
                              "lon": -122.689717,
                              "mode": "BUS",
                              "name": "W Burnside & SW 18th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2041",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 175860,
                                      "realtimeDeparture": 175860,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 175860,
                                      "scheduledDeparture": 175860,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230375",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565248650040,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/9860",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <injectIntl(AmenitiesPanel)
                            stopData={
                              Object {
                                "agencyName": "TriMet",
                                "amenities": Array [
                                  "Crosswalk near stop",
                                  "Curb ramp near stop",
                                  "Pavement at back door",
                                  "Pavement at front door",
                                  "Schedule display",
                                  "Sidewalk at stop",
                                  "Traffic signal",
                                ],
                                "code": "9860",
                                "desc": "Eastbound stop in Portland (Stop ID 9860)",
                                "id": "TriMet:9860",
                                "lat": 45.522919,
                                "lon": -122.689717,
                                "mode": "BUS",
                                "name": "W Burnside & SW 18th",
                                "routes": Array [
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:20",
                                    "longName": "Burnside/Stark",
                                    "mode": "BUS",
                                    "shortName": "20",
                                    "sortOrder": 2600,
                                    "sortOrderSet": true,
                                    "type": 3,
                                  },
                                ],
                                "rsn": "20",
                                "stopTimes": Array [
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2041",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 175860,
                                        "realtimeDeparture": 175860,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 175860,
                                        "scheduledDeparture": 175860,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230375",
                                      },
                                    ],
                                  },
                                ],
                                "stopTimesLastUpdated": 1565248650040,
                                "type": 3,
                                "url": "http://trimet.org/#tracker/stop/9860",
                              }
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <AmenitiesPanel
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en-US",
                                  "defaultRichTextElements": undefined,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en-US",
                                  "messages": Object {},
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              stopData={
                                Object {
                                  "agencyName": "TriMet",
                                  "amenities": Array [
                                    "Crosswalk near stop",
                                    "Curb ramp near stop",
                                    "Pavement at back door",
                                    "Pavement at front door",
                                    "Schedule display",
                                    "Sidewalk at stop",
                                    "Traffic signal",
                                  ],
                                  "code": "9860",
                                  "desc": "Eastbound stop in Portland (Stop ID 9860)",
                                  "id": "TriMet:9860",
                                  "lat": 45.522919,
                                  "lon": -122.689717,
                                  "mode": "BUS",
                                  "name": "W Burnside & SW 18th",
                                  "routes": Array [
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:20",
                                      "longName": "Burnside/Stark",
                                      "mode": "BUS",
                                      "shortName": "20",
                                      "sortOrder": 2600,
                                      "sortOrderSet": true,
                                      "type": 3,
                                    },
                                  ],
                                  "rsn": "20",
                                  "stopTimes": Array [
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2041",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 175860,
                                          "realtimeDeparture": 175860,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 175860,
                                          "scheduledDeparture": 175860,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230375",
                                        },
                                      ],
                                    },
                                  ],
                                  "stopTimesLastUpdated": 1565248650040,
                                  "type": 3,
                                  "url": "http://trimet.org/#tracker/stop/9860",
                                }
                              }
                              stopViewerConfig={
                                Object {
                                  "nearbyRadius": 250,
                                  "numberOfDepartures": 3,
                                  "showBlockIds": false,
                                  "timeRange": 345600,
                                }
                              }
                            >
                              <RelatedPanel
                                expanded={false}
                                onToggleExpanded={[Function]}
                                title="components.AmenitiesPanel.nearbyAmenities"
                                titleWidth="16ch"
                              >
                                <h4
                                  className="related-panel-title"
                                  style={
                                    Object {
                                      "width": "16ch",
                                    }
                                  }
                                >
                                  components.AmenitiesPanel.nearbyAmenities
                                </h4>
                                <div
                                  className="related-panel-container"
                                >
                                  <ul
                                    className="related-items-list list-unstyled"
                                  >
                                    <li
                                      className="related-item"
                                    >
                                      <div
                                        className="item-label"
                                      >
                                        <styled.div>
                                          <div
                                            className="sc-eFuaqX eZHYvB"
                                          >
                                            P
                                          </div>
                                        </styled.div>
                                        <FormattedMessage
                                          id="components.AmenitiesPanel.noPRLotsFound"
                                        >
                                          components.AmenitiesPanel.noPRLotsFound
                                        </FormattedMessage>
                                      </div>
                                    </li>
                                  </ul>
                                </div>
                              </RelatedPanel>
                            </AmenitiesPanel>
                          </injectIntl(AmenitiesPanel)>
                        </Connect(injectIntl(AmenitiesPanel))>
                      </div>
                    </LiveStopTimes>
                  </div>
                </styled.div>
              </div>
            </div>
          </StopViewer>
        </Connect(StopViewer)>
      </WrappedComponent>
    </injectIntl(WrappedComponent)>
  </Provider>
</IntlProvider>
`;

exports[`components > viewers > stop viewer should render times after midnight with the correct day of week 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <injectIntl(WrappedComponent)>
      <WrappedComponent
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en-US",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en-US",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
      >
        <Connect(StopViewer)
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en-US",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en-US",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <StopViewer
            enableFavoriteStops={false}
            favoriteStops={Array []}
            fetchStopInfo={[Function]}
            findStopTimesForStop={[Function]}
            forgetStop={[Function]}
            homeTimezone="America/Los_Angeles"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en-US",
                "defaultRichTextElements": undefined,
                "formatDate": [Function],
                "formatDateTimeRange": [Function],
                "formatDateToParts": [Function],
                "formatDisplayName": [Function],
                "formatList": [Function],
                "formatListToParts": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getDisplayNames": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {},
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
                "wrapRichTextChunksInFragment": undefined,
              }
            }
            rememberStop={[Function]}
            setHoveredStop={[Function]}
            setLocation={[Function]}
            setMainPanelContent={[Function]}
            showNearbyStops={true}
            stopData={
              Object {
                "agencyName": "TriMet",
                "amenities": Array [
                  "Crosswalk near stop",
                  "Curb ramp near stop",
                  "Pavement at back door",
                  "Pavement at front door",
                  "Schedule display",
                  "Sidewalk at stop",
                  "Traffic signal",
                ],
                "code": "9860",
                "desc": "Eastbound stop in Portland (Stop ID 9860)",
                "id": "TriMet:9860",
                "lat": 45.522919,
                "lon": -122.689717,
                "mode": "BUS",
                "name": "W Burnside & SW 18th",
                "routes": Array [
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:20",
                    "longName": "Burnside/Stark",
                    "mode": "BUS",
                    "shortName": "20",
                    "sortOrder": 2600,
                    "sortOrderSet": true,
                    "type": 3,
                  },
                ],
                "rsn": "20",
                "stopTimes": Array [
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2041",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 89460,
                        "realtimeDeparture": 89460,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 89460,
                        "scheduledDeparture": 89460,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230375",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2043",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 93120,
                        "realtimeDeparture": 93120,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 93120,
                        "scheduledDeparture": 93120,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230376",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2049",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 96780,
                        "realtimeDeparture": 96780,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 96780,
                        "scheduledDeparture": 96780,
                        "serviceDay": 1565161200,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230377",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:01",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2067",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 13980,
                        "realtimeDeparture": 13980,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 13980,
                        "scheduledDeparture": 13980,
                        "serviceDay": 1565247600,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230305",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2034",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 17580,
                        "realtimeDeparture": 17580,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 17580,
                        "scheduledDeparture": 17580,
                        "serviceDay": 1565247600,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230306",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2069",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 19020,
                        "realtimeDeparture": 19020,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 19020,
                        "scheduledDeparture": 19020,
                        "serviceDay": 1565247600,
                        "stopCount": 132,
                        "stopId": "TriMet:9860",
                        "stopIndex": 38,
                        "timepoint": true,
                        "tripId": "TriMet:9230307",
                      },
                    ],
                  },
                ],
                "stopTimesLastUpdated": 1565248650040,
                "type": 3,
                "url": "http://trimet.org/#tracker/stop/9860",
              }
            }
            stopViewerConfig={
              Object {
                "nearbyRadius": 250,
                "numberOfDepartures": 3,
                "showBlockIds": false,
                "timeRange": 345600,
              }
            }
            toggleAutoRefresh={[Function]}
            transitOperators={Array []}
            viewedStop={
              Object {
                "stopId": "TriMet:9860",
              }
            }
            zoomToStop={[Function]}
          >
            <div
              className="stop-viewer"
            >
              <div
                className="stop-viewer-header"
              >
                <div
                  className="back-button-container"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="btn btn-sm btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "ArrowLeft",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <ArrowLeft>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="m257.5 445.1-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </ArrowLeft>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="common.forms.back"
                        >
                          common.forms.back
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </Button>
                </div>
                <div
                  className="header-text"
                >
                  <span>
                    W Burnside & SW 18th
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "clear": "both",
                    }
                  }
                />
              </div>
              <div
                className="stop-viewer-body"
              >
                <div
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  <div>
                    <FormattedMessage
                      id="components.StopViewer.displayStopId"
                      values={
                        Object {
                          "stopId": "9860",
                          "strong": [Function],
                        }
                      }
                    >
                      components.StopViewer.displayStopId
                    </FormattedMessage>
                    <button
                      className="link-button"
                      onClick={[Function]}
                      title="components.StopViewer.zoomToStop"
                    >
                      <Icon
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Search",
                            "render": [Function],
                          }
                        }
                        style={
                          Object {
                            "marginLeft": "0.2em",
                          }
                        }
                      >
                        <styled.span
                          style={
                            Object {
                              "marginLeft": "0.2em",
                            }
                          }
                        >
                          <span
                            className="sc-gInthZ dOezsE"
                            style={
                              Object {
                                "marginLeft": "0.2em",
                              }
                            }
                          >
                            <Search>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 512 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 512 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7 405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Search>
                          </span>
                        </styled.span>
                      </Icon>
                    </button>
                    <button
                      className="link-button pull-right"
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "small",
                        }
                      }
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Calendar",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <Calendar>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Calendar>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="components.StopViewer.viewSchedule"
                        >
                          components.StopViewer.viewSchedule
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </div>
                  <FromToLocationPicker
                    label={true}
                    onFromClick={[Function]}
                    onToClick={[Function]}
                  >
                    <strong>
                      <FormattedMessage
                        description="Label to prompt the user to plan a trip"
                        id="otpUi.FromToLocationPicker.planATrip"
                      >
                        otpUi.FromToLocationPicker.planATrip
                      </FormattedMessage>
                    </strong>
                    <styled__FromToPickerSpan>
                      <span
                        className="styled__FromToPickerSpan-sc-vb4790-1 dWHacc"
                      >
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="from"
                            >
                              <styled__FromIcon
                                className=""
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <DotCircle
                                  className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                  size="0.9em"
                                  title="From Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                    size="0.9em"
                                    title="From Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                      size="0.9em"
                                      title="From Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 512 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          From Location Icon
                                        </title>
                                        <path
                                          d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </DotCircle>
                              </styled__FromIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'from' button of the picker"
                                  id="otpUi.FromToLocationPicker.from"
                                >
                                  otpUi.FromToLocationPicker.from
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="to"
                            >
                              <styled__ToIcon
                                className=""
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <MapMarkerAlt
                                  className="styled__ToIcon-n5xcvc-2 bCTefk"
                                  size="0.9em"
                                  title="To Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__ToIcon-n5xcvc-2 bCTefk"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 384 512"
                                    size="0.9em"
                                    title="To Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 384 512"
                                      size="0.9em"
                                      title="To Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 384 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          To Location Icon
                                        </title>
                                        <path
                                          d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </MapMarkerAlt>
                              </styled__ToIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'to' button of the picker"
                                  id="otpUi.FromToLocationPicker.to"
                                >
                                  otpUi.FromToLocationPicker.to
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                      </span>
                    </styled__FromToPickerSpan>
                  </FromToLocationPicker>
                </div>
                <styled.div>
                  <div
                    className="sc-gyUflj heQDAy"
                  >
                    <LiveStopTimes
                      findStopTimesForStop={[Function]}
                      homeTimezone="America/Los_Angeles"
                      setHoveredStop={[Function]}
                      showNearbyStops={true}
                      stopData={
                        Object {
                          "agencyName": "TriMet",
                          "amenities": Array [
                            "Crosswalk near stop",
                            "Curb ramp near stop",
                            "Pavement at back door",
                            "Pavement at front door",
                            "Schedule display",
                            "Sidewalk at stop",
                            "Traffic signal",
                          ],
                          "code": "9860",
                          "desc": "Eastbound stop in Portland (Stop ID 9860)",
                          "id": "TriMet:9860",
                          "lat": 45.522919,
                          "lon": -122.689717,
                          "mode": "BUS",
                          "name": "W Burnside & SW 18th",
                          "routes": Array [
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            },
                          ],
                          "rsn": "20",
                          "stopTimes": Array [
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2041",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 89460,
                                  "realtimeDeparture": 89460,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 89460,
                                  "scheduledDeparture": 89460,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230375",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2043",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 93120,
                                  "realtimeDeparture": 93120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 93120,
                                  "scheduledDeparture": 93120,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230376",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2049",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 96780,
                                  "realtimeDeparture": 96780,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 96780,
                                  "scheduledDeparture": 96780,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230377",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:01",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2067",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 13980,
                                  "realtimeDeparture": 13980,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 13980,
                                  "scheduledDeparture": 13980,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230305",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2034",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 17580,
                                  "realtimeDeparture": 17580,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 17580,
                                  "scheduledDeparture": 17580,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230306",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2069",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 19020,
                                  "realtimeDeparture": 19020,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 19020,
                                  "scheduledDeparture": 19020,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230307",
                                },
                              ],
                            },
                          ],
                          "stopTimesLastUpdated": 1565248650040,
                          "type": 3,
                          "url": "http://trimet.org/#tracker/stop/9860",
                        }
                      }
                      stopViewerConfig={
                        Object {
                          "nearbyRadius": 250,
                          "numberOfDepartures": 3,
                          "showBlockIds": false,
                          "timeRange": 345600,
                        }
                      }
                      toggleAutoRefresh={[Function]}
                      transitOperators={Array []}
                      viewedStop={
                        Object {
                          "stopId": "TriMet:9860",
                        }
                      }
                    >
                      <div>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:20-Gresham TC"
                          pattern={
                            Object {
                              "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                              "headsign": "Gresham TC",
                              "id": "TriMet:20:1:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2041",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 89460,
                                "realtimeDeparture": 89460,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 89460,
                                "scheduledDeparture": 89460,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230375",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2043",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 93120,
                                "realtimeDeparture": 93120,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 93120,
                                "scheduledDeparture": 93120,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230376",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2049",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 96780,
                                "realtimeDeparture": 96780,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 96780,
                                "scheduledDeparture": 96780,
                                "serviceDay": 1565161200,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230377",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2067",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 13980,
                                "realtimeDeparture": 13980,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 13980,
                                "scheduledDeparture": 13980,
                                "serviceDay": 1565247600,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230305",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2034",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 17580,
                                "realtimeDeparture": 17580,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 17580,
                                "scheduledDeparture": 17580,
                                "serviceDay": 1565247600,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230306",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2069",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 19020,
                                "realtimeDeparture": 19020,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 19020,
                                "scheduledDeparture": 19020,
                                "serviceDay": 1565247600,
                                "stopCount": 132,
                                "stopId": "TriMet:9860",
                                "stopIndex": 38,
                                "timepoint": true,
                                "tripId": "TriMet:9230307",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:20",
                                "longName": "Burnside/Stark",
                                "mode": "BUS",
                                "shortName": "20",
                                "sortOrder": 2600,
                                "sortOrderSet": true,
                                "type": 3,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2041",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 89460,
                                  "realtimeDeparture": 89460,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 89460,
                                  "scheduledDeparture": 89460,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230375",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2043",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 93120,
                                  "realtimeDeparture": 93120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 93120,
                                  "scheduledDeparture": 93120,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230376",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2049",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 96780,
                                  "realtimeDeparture": 96780,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 96780,
                                  "scheduledDeparture": 96780,
                                  "serviceDay": 1565161200,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230377",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2067",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 13980,
                                  "realtimeDeparture": 13980,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 13980,
                                  "scheduledDeparture": 13980,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230305",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2034",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 17580,
                                  "realtimeDeparture": 17580,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 17580,
                                  "scheduledDeparture": 17580,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230306",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2069",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 19020,
                                  "realtimeDeparture": 19020,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 19020,
                                  "scheduledDeparture": 19020,
                                  "serviceDay": 1565247600,
                                  "stopCount": 132,
                                  "stopId": "TriMet:9860",
                                  "stopIndex": 38,
                                  "timepoint": true,
                                  "tripId": "TriMet:9230307",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Burnside/Stark",
                                          "routeShortName": "20",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          20
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Gresham TC",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2041",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 89460,
                                        "realtimeDeparture": 89460,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 89460,
                                        "scheduledDeparture": 89460,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230375",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                          style={
                                            Object {
                                              "marginBottom": -4,
                                            }
                                          }
                                        >
                                          <FormattedDayOfWeek
                                            day="thursday"
                                          >
                                            <FormattedMessage
                                              id="common.daysOfWeek.thursday"
                                            >
                                              common.daysOfWeek.thursday
                                            </FormattedMessage>
                                          </FormattedDayOfWeek>
                                        </div>
                                        <div
                                          className="percy-hide"
                                        >
                                          <DepartureTime
                                            realTime={true}
                                            stopTime={
                                              Object {
                                                "arrivalDelay": 0,
                                                "blockId": "2041",
                                                "departureDelay": 0,
                                                "headsign": "Gresham TC",
                                                "realtime": false,
                                                "realtimeArrival": 89460,
                                                "realtimeDeparture": 89460,
                                                "realtimeState": "SCHEDULED",
                                                "scheduledArrival": 89460,
                                                "scheduledDeparture": 89460,
                                                "serviceDay": 1565161200,
                                                "stopCount": 132,
                                                "stopId": "TriMet:9860",
                                                "stopIndex": 38,
                                                "timepoint": true,
                                                "tripId": "TriMet:9230375",
                                              }
                                            }
                                          >
                                            <FormattedTime
                                              timeStyle="short"
                                              value={2019-08-08T07:51:00.000Z}
                                            >
                                              12:51 AM
                                            </FormattedTime>
                                          </DepartureTime>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-20"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-20"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2041",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 89460,
                                                  "realtimeDeparture": 89460,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 89460,
                                                  "scheduledDeparture": 89460,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230375",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="thursday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.thursday"
                                                      >
                                                        common.daysOfWeek.thursday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2041",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 89460,
                                                          "realtimeDeparture": 89460,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 89460,
                                                          "scheduledDeparture": 89460,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:9860",
                                                          "stopIndex": 38,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9230375",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-08T07:51:00.000Z}
                                                      >
                                                        12:51 AM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2043",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 93120,
                                                  "realtimeDeparture": 93120,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 93120,
                                                  "scheduledDeparture": 93120,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230376",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="thursday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.thursday"
                                                      >
                                                        common.daysOfWeek.thursday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2043",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 93120,
                                                          "realtimeDeparture": 93120,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 93120,
                                                          "scheduledDeparture": 93120,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:9860",
                                                          "stopIndex": 38,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9230376",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-08T08:52:00.000Z}
                                                      >
                                                        1:52 AM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2049",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 96780,
                                                  "realtimeDeparture": 96780,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 96780,
                                                  "scheduledDeparture": 96780,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:9860",
                                                  "stopIndex": 38,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9230377",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="thursday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.thursday"
                                                      >
                                                        common.daysOfWeek.thursday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2049",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 96780,
                                                          "realtimeDeparture": 96780,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 96780,
                                                          "scheduledDeparture": 96780,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:9860",
                                                          "stopIndex": 38,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9230377",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-08T09:53:00.000Z}
                                                      >
                                                        2:53 AM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                      </div>
                      <div
                        style={
                          Object {
                            "marginTop": "20px",
                          }
                        }
                      >
                        <label
                          style={
                            Object {
                              "fontSize": "small",
                              "fontWeight": 300,
                            }
                          }
                        >
                          <styled.span
                            margin={0.25}
                          >
                            <span
                              className="sc-jXktde fKyBCi"
                            >
                              <input
                                name="autoUpdate"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </span>
                          </styled.span>
                          <FormattedMessage
                            id="components.LiveStopTimes.autoRefresh"
                          >
                            components.LiveStopTimes.autoRefresh
                          </FormattedMessage>
                        </label>
                        <button
                          className="link-button pull-right percy-hide"
                          onClick={[Function]}
                          style={
                            Object {
                              "fontSize": "small",
                            }
                          }
                        >
                          <IconWithText
                            Icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Redo",
                                "render": [Function],
                              }
                            }
                            spin={true}
                          >
                            <Styled(styled.span)>
                              <span
                                className="sc-gInthZ sc-euMpEg dOezsE KEner"
                              >
                                <Redo>
                                  <StyledIconBase
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="StyledIconBase-ea9ulj-0 iuNRof"
                                        fill="currentColor"
                                        focusable="false"
                                        viewBox="0 0 512 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </Redo>
                              </span>
                            </Styled(styled.span)>
                            <FormattedTime
                              timeStyle="short"
                              timeZone="America/Los_Angeles"
                              value={1565248650040}
                            >
                              12:17 AM
                            </FormattedTime>
                          </IconWithText>
                        </button>
                        <RelatedStopsPanel
                          homeTimezone="America/Los_Angeles"
                          setHoveredStop={[Function]}
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                                "Traffic signal",
                              ],
                              "code": "9860",
                              "desc": "Eastbound stop in Portland (Stop ID 9860)",
                              "id": "TriMet:9860",
                              "lat": 45.522919,
                              "lon": -122.689717,
                              "mode": "BUS",
                              "name": "W Burnside & SW 18th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2041",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 89460,
                                      "realtimeDeparture": 89460,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 89460,
                                      "scheduledDeparture": 89460,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230375",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2043",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 93120,
                                      "realtimeDeparture": 93120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 93120,
                                      "scheduledDeparture": 93120,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230376",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2049",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 96780,
                                      "realtimeDeparture": 96780,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 96780,
                                      "scheduledDeparture": 96780,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230377",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2067",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 13980,
                                      "realtimeDeparture": 13980,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 13980,
                                      "scheduledDeparture": 13980,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230305",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2034",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 17580,
                                      "realtimeDeparture": 17580,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 17580,
                                      "scheduledDeparture": 17580,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230306",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2069",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 19020,
                                      "realtimeDeparture": 19020,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 19020,
                                      "scheduledDeparture": 19020,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230307",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565248650040,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/9860",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <RelatedPanel
                            expanded={false}
                            onToggleExpanded={[Function]}
                            title={
                              <Memo(MemoizedFormattedMessage)
                                id="components.RelatedStopsPanel.relatedStops"
                              />
                            }
                            titleWidth="13ch"
                          >
                            <h4
                              className="related-panel-title"
                              style={
                                Object {
                                  "width": "13ch",
                                }
                              }
                            >
                              <FormattedMessage
                                id="components.RelatedStopsPanel.relatedStops"
                              >
                                components.RelatedStopsPanel.relatedStops
                              </FormattedMessage>
                            </h4>
                            <div
                              className="related-panel-container"
                            >
                              <ul
                                className="related-items-list list-unstyled"
                              />
                            </div>
                          </RelatedPanel>
                        </RelatedStopsPanel>
                        <Connect(injectIntl(AmenitiesPanel))
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                                "Traffic signal",
                              ],
                              "code": "9860",
                              "desc": "Eastbound stop in Portland (Stop ID 9860)",
                              "id": "TriMet:9860",
                              "lat": 45.522919,
                              "lon": -122.689717,
                              "mode": "BUS",
                              "name": "W Burnside & SW 18th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2041",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 89460,
                                      "realtimeDeparture": 89460,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 89460,
                                      "scheduledDeparture": 89460,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230375",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2043",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 93120,
                                      "realtimeDeparture": 93120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 93120,
                                      "scheduledDeparture": 93120,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230376",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2049",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 96780,
                                      "realtimeDeparture": 96780,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 96780,
                                      "scheduledDeparture": 96780,
                                      "serviceDay": 1565161200,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230377",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2067",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 13980,
                                      "realtimeDeparture": 13980,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 13980,
                                      "scheduledDeparture": 13980,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230305",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2034",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 17580,
                                      "realtimeDeparture": 17580,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 17580,
                                      "scheduledDeparture": 17580,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230306",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2069",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 19020,
                                      "realtimeDeparture": 19020,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 19020,
                                      "scheduledDeparture": 19020,
                                      "serviceDay": 1565247600,
                                      "stopCount": 132,
                                      "stopId": "TriMet:9860",
                                      "stopIndex": 38,
                                      "timepoint": true,
                                      "tripId": "TriMet:9230307",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565248650040,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/9860",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <injectIntl(AmenitiesPanel)
                            stopData={
                              Object {
                                "agencyName": "TriMet",
                                "amenities": Array [
                                  "Crosswalk near stop",
                                  "Curb ramp near stop",
                                  "Pavement at back door",
                                  "Pavement at front door",
                                  "Schedule display",
                                  "Sidewalk at stop",
                                  "Traffic signal",
                                ],
                                "code": "9860",
                                "desc": "Eastbound stop in Portland (Stop ID 9860)",
                                "id": "TriMet:9860",
                                "lat": 45.522919,
                                "lon": -122.689717,
                                "mode": "BUS",
                                "name": "W Burnside & SW 18th",
                                "routes": Array [
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:20",
                                    "longName": "Burnside/Stark",
                                    "mode": "BUS",
                                    "shortName": "20",
                                    "sortOrder": 2600,
                                    "sortOrderSet": true,
                                    "type": 3,
                                  },
                                ],
                                "rsn": "20",
                                "stopTimes": Array [
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2041",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 89460,
                                        "realtimeDeparture": 89460,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 89460,
                                        "scheduledDeparture": 89460,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230375",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2043",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 93120,
                                        "realtimeDeparture": 93120,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 93120,
                                        "scheduledDeparture": 93120,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230376",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2049",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 96780,
                                        "realtimeDeparture": 96780,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 96780,
                                        "scheduledDeparture": 96780,
                                        "serviceDay": 1565161200,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230377",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:01",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2067",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 13980,
                                        "realtimeDeparture": 13980,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 13980,
                                        "scheduledDeparture": 13980,
                                        "serviceDay": 1565247600,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230305",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2034",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 17580,
                                        "realtimeDeparture": 17580,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 17580,
                                        "scheduledDeparture": 17580,
                                        "serviceDay": 1565247600,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230306",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2069",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 19020,
                                        "realtimeDeparture": 19020,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 19020,
                                        "scheduledDeparture": 19020,
                                        "serviceDay": 1565247600,
                                        "stopCount": 132,
                                        "stopId": "TriMet:9860",
                                        "stopIndex": 38,
                                        "timepoint": true,
                                        "tripId": "TriMet:9230307",
                                      },
                                    ],
                                  },
                                ],
                                "stopTimesLastUpdated": 1565248650040,
                                "type": 3,
                                "url": "http://trimet.org/#tracker/stop/9860",
                              }
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <AmenitiesPanel
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en-US",
                                  "defaultRichTextElements": undefined,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en-US",
                                  "messages": Object {},
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              stopData={
                                Object {
                                  "agencyName": "TriMet",
                                  "amenities": Array [
                                    "Crosswalk near stop",
                                    "Curb ramp near stop",
                                    "Pavement at back door",
                                    "Pavement at front door",
                                    "Schedule display",
                                    "Sidewalk at stop",
                                    "Traffic signal",
                                  ],
                                  "code": "9860",
                                  "desc": "Eastbound stop in Portland (Stop ID 9860)",
                                  "id": "TriMet:9860",
                                  "lat": 45.522919,
                                  "lon": -122.689717,
                                  "mode": "BUS",
                                  "name": "W Burnside & SW 18th",
                                  "routes": Array [
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:20",
                                      "longName": "Burnside/Stark",
                                      "mode": "BUS",
                                      "shortName": "20",
                                      "sortOrder": 2600,
                                      "sortOrderSet": true,
                                      "type": 3,
                                    },
                                  ],
                                  "rsn": "20",
                                  "stopTimes": Array [
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2041",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 89460,
                                          "realtimeDeparture": 89460,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 89460,
                                          "scheduledDeparture": 89460,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230375",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2043",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 93120,
                                          "realtimeDeparture": 93120,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 93120,
                                          "scheduledDeparture": 93120,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230376",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2049",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 96780,
                                          "realtimeDeparture": 96780,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 96780,
                                          "scheduledDeparture": 96780,
                                          "serviceDay": 1565161200,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230377",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:01",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2067",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 13980,
                                          "realtimeDeparture": 13980,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 13980,
                                          "scheduledDeparture": 13980,
                                          "serviceDay": 1565247600,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230305",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2034",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 17580,
                                          "realtimeDeparture": 17580,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 17580,
                                          "scheduledDeparture": 17580,
                                          "serviceDay": 1565247600,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230306",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2069",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 19020,
                                          "realtimeDeparture": 19020,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 19020,
                                          "scheduledDeparture": 19020,
                                          "serviceDay": 1565247600,
                                          "stopCount": 132,
                                          "stopId": "TriMet:9860",
                                          "stopIndex": 38,
                                          "timepoint": true,
                                          "tripId": "TriMet:9230307",
                                        },
                                      ],
                                    },
                                  ],
                                  "stopTimesLastUpdated": 1565248650040,
                                  "type": 3,
                                  "url": "http://trimet.org/#tracker/stop/9860",
                                }
                              }
                              stopViewerConfig={
                                Object {
                                  "nearbyRadius": 250,
                                  "numberOfDepartures": 3,
                                  "showBlockIds": false,
                                  "timeRange": 345600,
                                }
                              }
                            >
                              <RelatedPanel
                                expanded={false}
                                onToggleExpanded={[Function]}
                                title="components.AmenitiesPanel.nearbyAmenities"
                                titleWidth="16ch"
                              >
                                <h4
                                  className="related-panel-title"
                                  style={
                                    Object {
                                      "width": "16ch",
                                    }
                                  }
                                >
                                  components.AmenitiesPanel.nearbyAmenities
                                </h4>
                                <div
                                  className="related-panel-container"
                                >
                                  <ul
                                    className="related-items-list list-unstyled"
                                  >
                                    <li
                                      className="related-item"
                                    >
                                      <div
                                        className="item-label"
                                      >
                                        <styled.div>
                                          <div
                                            className="sc-eFuaqX eZHYvB"
                                          >
                                            P
                                          </div>
                                        </styled.div>
                                        <FormattedMessage
                                          id="components.AmenitiesPanel.noPRLotsFound"
                                        >
                                          components.AmenitiesPanel.noPRLotsFound
                                        </FormattedMessage>
                                      </div>
                                    </li>
                                  </ul>
                                </div>
                              </RelatedPanel>
                            </AmenitiesPanel>
                          </injectIntl(AmenitiesPanel)>
                        </Connect(injectIntl(AmenitiesPanel))>
                      </div>
                    </LiveStopTimes>
                  </div>
                </styled.div>
              </div>
            </div>
          </StopViewer>
        </Connect(StopViewer)>
      </WrappedComponent>
    </injectIntl(WrappedComponent)>
  </Provider>
</IntlProvider>
`;

exports[`components > viewers > stop viewer should render with OTP transit index data 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <injectIntl(WrappedComponent)>
      <WrappedComponent
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en-US",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en-US",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
      >
        <Connect(StopViewer)
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en-US",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en-US",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <StopViewer
            enableFavoriteStops={false}
            favoriteStops={Array []}
            fetchStopInfo={[Function]}
            findStopTimesForStop={[Function]}
            forgetStop={[Function]}
            homeTimezone="America/Los_Angeles"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en-US",
                "defaultRichTextElements": undefined,
                "formatDate": [Function],
                "formatDateTimeRange": [Function],
                "formatDateToParts": [Function],
                "formatDisplayName": [Function],
                "formatList": [Function],
                "formatListToParts": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getDisplayNames": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {},
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
                "wrapRichTextChunksInFragment": undefined,
              }
            }
            rememberStop={[Function]}
            setHoveredStop={[Function]}
            setLocation={[Function]}
            setMainPanelContent={[Function]}
            showNearbyStops={true}
            stopData={
              Object {
                "code": "715",
                "desc": "Eastbound stop in Portland (Stop ID 715)",
                "id": "TriMet:715",
                "lat": 45.522912,
                "locationType": 0,
                "lon": -122.678538,
                "name": "W Burnside & SW 8th",
                "routes": Array [
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:20",
                    "longName": "Burnside/Stark",
                    "mode": "BUS",
                    "shortName": "20",
                    "sortOrder": 2600,
                  },
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:94",
                    "longName": "Pacific Hwy/Sherwood",
                    "mode": "BUS",
                    "shortName": "94",
                    "sortOrder": 9100,
                  },
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:36",
                    "longName": "South Shore",
                    "mode": "BUS",
                    "shortName": "36",
                    "sortOrder": 3900,
                  },
                ],
                "stopTimes": Array [
                  Object {
                    "pattern": Object {
                      "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "Tualatin Park & Ride",
                      "id": "TriMet:36:0:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "3668",
                        "departureDelay": 0,
                        "headsign": "Tualatin Park & Ride",
                        "realtime": false,
                        "realtimeArrival": 58260,
                        "realtimeDeparture": 58260,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 58260,
                        "scheduledDeparture": 58260,
                        "serviceDay": 1565074800,
                        "stopCount": 63,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9231858",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "3670",
                        "departureDelay": 0,
                        "headsign": "Tualatin Park & Ride",
                        "realtime": false,
                        "realtimeArrival": 61740,
                        "realtimeDeparture": 61740,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 61740,
                        "scheduledDeparture": 61740,
                        "serviceDay": 1565074800,
                        "stopCount": 63,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9231860",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "3668",
                        "departureDelay": 0,
                        "headsign": "Tualatin Park & Ride",
                        "realtime": false,
                        "realtimeArrival": 58260,
                        "realtimeDeparture": 58260,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 58260,
                        "scheduledDeparture": 58260,
                        "serviceDay": 1565161200,
                        "stopCount": 63,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9231858",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "Sherwood",
                      "id": "TriMet:94:0:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9468",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 52080,
                        "realtimeDeparture": 52080,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 52080,
                        "scheduledDeparture": 52080,
                        "serviceDay": 1565074800,
                        "stopCount": 40,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238187",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9372",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54120,
                        "realtimeDeparture": 54120,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54120,
                        "scheduledDeparture": 54120,
                        "serviceDay": 1565074800,
                        "stopCount": 40,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238189",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9474",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 56880,
                        "realtimeDeparture": 56880,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 56880,
                        "scheduledDeparture": 56880,
                        "serviceDay": 1565074800,
                        "stopCount": 40,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238194",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "King City",
                      "id": "TriMet:94:0:02",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9472",
                        "departureDelay": 0,
                        "headsign": "King City",
                        "realtime": false,
                        "realtimeArrival": 55320,
                        "realtimeDeparture": 55320,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 55320,
                        "scheduledDeparture": 55320,
                        "serviceDay": 1565074800,
                        "stopCount": 23,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238192",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9472",
                        "departureDelay": 0,
                        "headsign": "King City",
                        "realtime": false,
                        "realtimeArrival": 55320,
                        "realtimeDeparture": 55320,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 55320,
                        "scheduledDeparture": 55320,
                        "serviceDay": 1565161200,
                        "stopCount": 23,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238192",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9472",
                        "departureDelay": 0,
                        "headsign": "King City",
                        "realtime": false,
                        "realtimeArrival": 55320,
                        "realtimeDeparture": 55320,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 55320,
                        "scheduledDeparture": 55320,
                        "serviceDay": 1565247600,
                        "stopCount": 23,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238192",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "Sherwood",
                      "id": "TriMet:94:0:03",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9470",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54720,
                        "realtimeDeparture": 54720,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54720,
                        "scheduledDeparture": 54720,
                        "serviceDay": 1565074800,
                        "stopCount": 34,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238190",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9470",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54720,
                        "realtimeDeparture": 54720,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54720,
                        "scheduledDeparture": 54720,
                        "serviceDay": 1565161200,
                        "stopCount": 34,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238190",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9470",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54720,
                        "realtimeDeparture": 54720,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54720,
                        "scheduledDeparture": 54720,
                        "serviceDay": 1565247600,
                        "stopCount": 34,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238190",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2045",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 64859,
                        "realtimeDeparture": 64859,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 64859,
                        "scheduledDeparture": 64859,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230358",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2047",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 66668,
                        "realtimeDeparture": 66668,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 66668,
                        "scheduledDeparture": 66668,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230360",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2048",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 67628,
                        "realtimeDeparture": 67628,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 67628,
                        "scheduledDeparture": 67628,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230361",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:01",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2046",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 65759,
                        "realtimeDeparture": 65759,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 65759,
                        "scheduledDeparture": 65759,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230359",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2036",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 70028,
                        "realtimeDeparture": 70028,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 70028,
                        "scheduledDeparture": 70028,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230363",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2071",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 72436,
                        "realtimeDeparture": 72436,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 72436,
                        "scheduledDeparture": 72436,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230365",
                      },
                    ],
                  },
                ],
                "stopTimesLastUpdated": 1565052624406,
                "url": "http://trimet.org/#tracker/stop/715",
                "vehicleType": -999,
                "vehicleTypeSet": false,
                "wheelchairBoarding": 0,
                "zoneId": "B",
              }
            }
            stopViewerConfig={
              Object {
                "nearbyRadius": 250,
                "numberOfDepartures": 3,
                "showBlockIds": false,
                "timeRange": 345600,
              }
            }
            toggleAutoRefresh={[Function]}
            transitOperators={Array []}
            viewedStop={
              Object {
                "stopId": "TriMet:715",
              }
            }
            zoomToStop={[Function]}
          >
            <div
              className="stop-viewer"
            >
              <div
                className="stop-viewer-header"
              >
                <div
                  className="back-button-container"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="btn btn-sm btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "ArrowLeft",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <ArrowLeft>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="m257.5 445.1-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </ArrowLeft>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="common.forms.back"
                        >
                          common.forms.back
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </Button>
                </div>
                <div
                  className="header-text"
                >
                  <span>
                    W Burnside & SW 8th
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "clear": "both",
                    }
                  }
                />
              </div>
              <div
                className="stop-viewer-body"
              >
                <div
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  <div>
                    <FormattedMessage
                      id="components.StopViewer.displayStopId"
                      values={
                        Object {
                          "stopId": "715",
                          "strong": [Function],
                        }
                      }
                    >
                      components.StopViewer.displayStopId
                    </FormattedMessage>
                    <button
                      className="link-button"
                      onClick={[Function]}
                      title="components.StopViewer.zoomToStop"
                    >
                      <Icon
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Search",
                            "render": [Function],
                          }
                        }
                        style={
                          Object {
                            "marginLeft": "0.2em",
                          }
                        }
                      >
                        <styled.span
                          style={
                            Object {
                              "marginLeft": "0.2em",
                            }
                          }
                        >
                          <span
                            className="sc-gInthZ dOezsE"
                            style={
                              Object {
                                "marginLeft": "0.2em",
                              }
                            }
                          >
                            <Search>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 512 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 512 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7 405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Search>
                          </span>
                        </styled.span>
                      </Icon>
                    </button>
                    <button
                      className="link-button pull-right"
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "small",
                        }
                      }
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Calendar",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <Calendar>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Calendar>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="components.StopViewer.viewSchedule"
                        >
                          components.StopViewer.viewSchedule
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </div>
                  <FromToLocationPicker
                    label={true}
                    onFromClick={[Function]}
                    onToClick={[Function]}
                  >
                    <strong>
                      <FormattedMessage
                        description="Label to prompt the user to plan a trip"
                        id="otpUi.FromToLocationPicker.planATrip"
                      >
                        otpUi.FromToLocationPicker.planATrip
                      </FormattedMessage>
                    </strong>
                    <styled__FromToPickerSpan>
                      <span
                        className="styled__FromToPickerSpan-sc-vb4790-1 dWHacc"
                      >
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="from"
                            >
                              <styled__FromIcon
                                className=""
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <DotCircle
                                  className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                  size="0.9em"
                                  title="From Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                    size="0.9em"
                                    title="From Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                      size="0.9em"
                                      title="From Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 512 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          From Location Icon
                                        </title>
                                        <path
                                          d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </DotCircle>
                              </styled__FromIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'from' button of the picker"
                                  id="otpUi.FromToLocationPicker.from"
                                >
                                  otpUi.FromToLocationPicker.from
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="to"
                            >
                              <styled__ToIcon
                                className=""
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <MapMarkerAlt
                                  className="styled__ToIcon-n5xcvc-2 bCTefk"
                                  size="0.9em"
                                  title="To Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__ToIcon-n5xcvc-2 bCTefk"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 384 512"
                                    size="0.9em"
                                    title="To Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 384 512"
                                      size="0.9em"
                                      title="To Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 384 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          To Location Icon
                                        </title>
                                        <path
                                          d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </MapMarkerAlt>
                              </styled__ToIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'to' button of the picker"
                                  id="otpUi.FromToLocationPicker.to"
                                >
                                  otpUi.FromToLocationPicker.to
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                      </span>
                    </styled__FromToPickerSpan>
                  </FromToLocationPicker>
                </div>
                <styled.div>
                  <div
                    className="sc-gyUflj heQDAy"
                  >
                    <LiveStopTimes
                      findStopTimesForStop={[Function]}
                      homeTimezone="America/Los_Angeles"
                      setHoveredStop={[Function]}
                      showNearbyStops={true}
                      stopData={
                        Object {
                          "code": "715",
                          "desc": "Eastbound stop in Portland (Stop ID 715)",
                          "id": "TriMet:715",
                          "lat": 45.522912,
                          "locationType": 0,
                          "lon": -122.678538,
                          "name": "W Burnside & SW 8th",
                          "routes": Array [
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                            },
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:94",
                              "longName": "Pacific Hwy/Sherwood",
                              "mode": "BUS",
                              "shortName": "94",
                              "sortOrder": 9100,
                            },
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:36",
                              "longName": "South Shore",
                              "mode": "BUS",
                              "shortName": "36",
                              "sortOrder": 3900,
                            },
                          ],
                          "stopTimes": Array [
                            Object {
                              "pattern": Object {
                                "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Tualatin Park & Ride",
                                "id": "TriMet:36:0:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3668",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 58260,
                                  "realtimeDeparture": 58260,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 58260,
                                  "scheduledDeparture": 58260,
                                  "serviceDay": 1565074800,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231858",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3670",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 61740,
                                  "realtimeDeparture": 61740,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 61740,
                                  "scheduledDeparture": 61740,
                                  "serviceDay": 1565074800,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231860",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3668",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 58260,
                                  "realtimeDeparture": 58260,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 58260,
                                  "scheduledDeparture": 58260,
                                  "serviceDay": 1565161200,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231858",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Sherwood",
                                "id": "TriMet:94:0:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9468",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 52080,
                                  "realtimeDeparture": 52080,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 52080,
                                  "scheduledDeparture": 52080,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238187",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9372",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54120,
                                  "realtimeDeparture": 54120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54120,
                                  "scheduledDeparture": 54120,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238189",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9474",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 56880,
                                  "realtimeDeparture": 56880,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 56880,
                                  "scheduledDeparture": 56880,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238194",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "King City",
                                "id": "TriMet:94:0:02",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565074800,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565161200,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565247600,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Sherwood",
                                "id": "TriMet:94:0:03",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565074800,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565161200,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565247600,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2045",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 64859,
                                  "realtimeDeparture": 64859,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 64859,
                                  "scheduledDeparture": 64859,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230358",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2047",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 66668,
                                  "realtimeDeparture": 66668,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 66668,
                                  "scheduledDeparture": 66668,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230360",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2048",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 67628,
                                  "realtimeDeparture": 67628,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 67628,
                                  "scheduledDeparture": 67628,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230361",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:01",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2046",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 65759,
                                  "realtimeDeparture": 65759,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 65759,
                                  "scheduledDeparture": 65759,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230359",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2036",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 70028,
                                  "realtimeDeparture": 70028,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 70028,
                                  "scheduledDeparture": 70028,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230363",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2071",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 72436,
                                  "realtimeDeparture": 72436,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 72436,
                                  "scheduledDeparture": 72436,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230365",
                                },
                              ],
                            },
                          ],
                          "stopTimesLastUpdated": 1565052624406,
                          "url": "http://trimet.org/#tracker/stop/715",
                          "vehicleType": -999,
                          "vehicleTypeSet": false,
                          "wheelchairBoarding": 0,
                          "zoneId": "B",
                        }
                      }
                      stopViewerConfig={
                        Object {
                          "nearbyRadius": 250,
                          "numberOfDepartures": 3,
                          "showBlockIds": false,
                          "timeRange": 345600,
                        }
                      }
                      toggleAutoRefresh={[Function]}
                      transitOperators={Array []}
                      viewedStop={
                        Object {
                          "stopId": "TriMet:715",
                        }
                      }
                    >
                      <div>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:20-Gresham TC"
                          pattern={
                            Object {
                              "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                              "headsign": "Gresham TC",
                              "id": "TriMet:20:1:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2045",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 64859,
                                "realtimeDeparture": 64859,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 64859,
                                "scheduledDeparture": 64859,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230358",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2047",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 66668,
                                "realtimeDeparture": 66668,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 66668,
                                "scheduledDeparture": 66668,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230360",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2048",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 67628,
                                "realtimeDeparture": 67628,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 67628,
                                "scheduledDeparture": 67628,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230361",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2046",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 65759,
                                "realtimeDeparture": 65759,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 65759,
                                "scheduledDeparture": 65759,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230359",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2036",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 70028,
                                "realtimeDeparture": 70028,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 70028,
                                "scheduledDeparture": 70028,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230363",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2071",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 72436,
                                "realtimeDeparture": 72436,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 72436,
                                "scheduledDeparture": 72436,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230365",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:20",
                                "longName": "Burnside/Stark",
                                "mode": "BUS",
                                "shortName": "20",
                                "sortOrder": 2600,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2045",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 64859,
                                  "realtimeDeparture": 64859,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 64859,
                                  "scheduledDeparture": 64859,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230358",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2047",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 66668,
                                  "realtimeDeparture": 66668,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 66668,
                                  "scheduledDeparture": 66668,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230360",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2048",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 67628,
                                  "realtimeDeparture": 67628,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 67628,
                                  "scheduledDeparture": 67628,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230361",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2046",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 65759,
                                  "realtimeDeparture": 65759,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 65759,
                                  "scheduledDeparture": 65759,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230359",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2036",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 70028,
                                  "realtimeDeparture": 70028,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 70028,
                                  "scheduledDeparture": 70028,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230363",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2071",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 72436,
                                  "realtimeDeparture": 72436,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 72436,
                                  "scheduledDeparture": 72436,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230365",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Burnside/Stark",
                                          "routeShortName": "20",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          20
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Gresham TC",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2045",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 64859,
                                        "realtimeDeparture": 64859,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 64859,
                                        "scheduledDeparture": 64859,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230358",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                          style={
                                            Object {
                                              "marginBottom": -4,
                                            }
                                          }
                                        >
                                          <FormattedDayOfWeek
                                            day="monday"
                                          >
                                            <FormattedMessage
                                              id="common.daysOfWeek.monday"
                                            >
                                              common.daysOfWeek.monday
                                            </FormattedMessage>
                                          </FormattedDayOfWeek>
                                        </div>
                                        <div
                                          className="percy-hide"
                                        >
                                          <DepartureTime
                                            realTime={true}
                                            stopTime={
                                              Object {
                                                "arrivalDelay": 0,
                                                "blockId": "2045",
                                                "departureDelay": 0,
                                                "headsign": "Gresham TC",
                                                "realtime": false,
                                                "realtimeArrival": 64859,
                                                "realtimeDeparture": 64859,
                                                "realtimeState": "SCHEDULED",
                                                "scheduledArrival": 64859,
                                                "scheduledDeparture": 64859,
                                                "serviceDay": 1564988400,
                                                "stopCount": 132,
                                                "stopId": "TriMet:715",
                                                "stopIndex": 42,
                                                "timepoint": false,
                                                "tripId": "TriMet:9230358",
                                              }
                                            }
                                          >
                                            <FormattedTime
                                              timeStyle="short"
                                              value={2019-08-06T01:00:59.000Z}
                                            >
                                              6:00 PM
                                            </FormattedTime>
                                          </DepartureTime>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-20"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-20"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2045",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 64859,
                                                  "realtimeDeparture": 64859,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 64859,
                                                  "scheduledDeparture": 64859,
                                                  "serviceDay": 1564988400,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 42,
                                                  "timepoint": false,
                                                  "tripId": "TriMet:9230358",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="monday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.monday"
                                                      >
                                                        common.daysOfWeek.monday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2045",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 64859,
                                                          "realtimeDeparture": 64859,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 64859,
                                                          "scheduledDeparture": 64859,
                                                          "serviceDay": 1564988400,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 42,
                                                          "timepoint": false,
                                                          "tripId": "TriMet:9230358",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T01:00:59.000Z}
                                                      >
                                                        6:00 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2046",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 65759,
                                                  "realtimeDeparture": 65759,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 65759,
                                                  "scheduledDeparture": 65759,
                                                  "serviceDay": 1564988400,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 42,
                                                  "timepoint": false,
                                                  "tripId": "TriMet:9230359",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="monday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.monday"
                                                      >
                                                        common.daysOfWeek.monday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2046",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 65759,
                                                          "realtimeDeparture": 65759,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 65759,
                                                          "scheduledDeparture": 65759,
                                                          "serviceDay": 1564988400,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 42,
                                                          "timepoint": false,
                                                          "tripId": "TriMet:9230359",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T01:15:59.000Z}
                                                      >
                                                        6:15 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2047",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 66668,
                                                  "realtimeDeparture": 66668,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 66668,
                                                  "scheduledDeparture": 66668,
                                                  "serviceDay": 1564988400,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 42,
                                                  "timepoint": false,
                                                  "tripId": "TriMet:9230360",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="monday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.monday"
                                                      >
                                                        common.daysOfWeek.monday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2047",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 66668,
                                                          "realtimeDeparture": 66668,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 66668,
                                                          "scheduledDeparture": 66668,
                                                          "serviceDay": 1564988400,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 42,
                                                          "timepoint": false,
                                                          "tripId": "TriMet:9230360",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T01:31:08.000Z}
                                                      >
                                                        6:31 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:36-Tualatin Park & Ride"
                          pattern={
                            Object {
                              "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                              "headsign": "Tualatin Park & Ride",
                              "id": "TriMet:36:0:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:36",
                              "longName": "South Shore",
                              "mode": "BUS",
                              "shortName": "36",
                              "sortOrder": 3900,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "3668",
                                "departureDelay": 0,
                                "headsign": "Tualatin Park & Ride",
                                "realtime": false,
                                "realtimeArrival": 58260,
                                "realtimeDeparture": 58260,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 58260,
                                "scheduledDeparture": 58260,
                                "serviceDay": 1565074800,
                                "stopCount": 63,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9231858",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "3670",
                                "departureDelay": 0,
                                "headsign": "Tualatin Park & Ride",
                                "realtime": false,
                                "realtimeArrival": 61740,
                                "realtimeDeparture": 61740,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 61740,
                                "scheduledDeparture": 61740,
                                "serviceDay": 1565074800,
                                "stopCount": 63,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9231860",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "3668",
                                "departureDelay": 0,
                                "headsign": "Tualatin Park & Ride",
                                "realtime": false,
                                "realtimeArrival": 58260,
                                "realtimeDeparture": 58260,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 58260,
                                "scheduledDeparture": 58260,
                                "serviceDay": 1565161200,
                                "stopCount": 63,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9231858",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Tualatin Park & Ride",
                                "id": "TriMet:36:0:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:36",
                                "longName": "South Shore",
                                "mode": "BUS",
                                "shortName": "36",
                                "sortOrder": 3900,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3668",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 58260,
                                  "realtimeDeparture": 58260,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 58260,
                                  "scheduledDeparture": 58260,
                                  "serviceDay": 1565074800,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231858",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3670",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 61740,
                                  "realtimeDeparture": 61740,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 61740,
                                  "scheduledDeparture": 61740,
                                  "serviceDay": 1565074800,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231860",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3668",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 58260,
                                  "realtimeDeparture": 58260,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 58260,
                                  "scheduledDeparture": 58260,
                                  "serviceDay": 1565161200,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231858",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "South Shore",
                                          "routeShortName": "36",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          36
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Tualatin Park & Ride",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3668",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 58260,
                                        "realtimeDeparture": 58260,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 58260,
                                        "scheduledDeparture": 58260,
                                        "serviceDay": 1565074800,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231858",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                          style={
                                            Object {
                                              "marginBottom": -4,
                                            }
                                          }
                                        >
                                          <FormattedDayOfWeek
                                            day="tuesday"
                                          >
                                            <FormattedMessage
                                              id="common.daysOfWeek.tuesday"
                                            >
                                              common.daysOfWeek.tuesday
                                            </FormattedMessage>
                                          </FormattedDayOfWeek>
                                        </div>
                                        <div
                                          className="percy-hide"
                                        >
                                          <DepartureTime
                                            realTime={true}
                                            stopTime={
                                              Object {
                                                "arrivalDelay": 0,
                                                "blockId": "3668",
                                                "departureDelay": 0,
                                                "headsign": "Tualatin Park & Ride",
                                                "realtime": false,
                                                "realtimeArrival": 58260,
                                                "realtimeDeparture": 58260,
                                                "realtimeState": "SCHEDULED",
                                                "scheduledArrival": 58260,
                                                "scheduledDeparture": 58260,
                                                "serviceDay": 1565074800,
                                                "stopCount": 63,
                                                "stopId": "TriMet:715",
                                                "stopIndex": 0,
                                                "timepoint": true,
                                                "tripId": "TriMet:9231858",
                                              }
                                            }
                                          >
                                            <FormattedTime
                                              timeStyle="short"
                                              value={2019-08-06T23:11:00.000Z}
                                            >
                                              4:11 PM
                                            </FormattedTime>
                                          </DepartureTime>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-36"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-36"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Tualatin Park & Ride",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "3668",
                                                  "departureDelay": 0,
                                                  "headsign": "Tualatin Park & Ride",
                                                  "realtime": false,
                                                  "realtimeArrival": 58260,
                                                  "realtimeDeparture": 58260,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 58260,
                                                  "scheduledDeparture": 58260,
                                                  "serviceDay": 1565074800,
                                                  "stopCount": 63,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9231858",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="tuesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.tuesday"
                                                      >
                                                        common.daysOfWeek.tuesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "3668",
                                                          "departureDelay": 0,
                                                          "headsign": "Tualatin Park & Ride",
                                                          "realtime": false,
                                                          "realtimeArrival": 58260,
                                                          "realtimeDeparture": 58260,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 58260,
                                                          "scheduledDeparture": 58260,
                                                          "serviceDay": 1565074800,
                                                          "stopCount": 63,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9231858",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T23:11:00.000Z}
                                                      >
                                                        4:11 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Tualatin Park & Ride",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "3670",
                                                  "departureDelay": 0,
                                                  "headsign": "Tualatin Park & Ride",
                                                  "realtime": false,
                                                  "realtimeArrival": 61740,
                                                  "realtimeDeparture": 61740,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 61740,
                                                  "scheduledDeparture": 61740,
                                                  "serviceDay": 1565074800,
                                                  "stopCount": 63,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9231860",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="tuesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.tuesday"
                                                      >
                                                        common.daysOfWeek.tuesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "3670",
                                                          "departureDelay": 0,
                                                          "headsign": "Tualatin Park & Ride",
                                                          "realtime": false,
                                                          "realtimeArrival": 61740,
                                                          "realtimeDeparture": 61740,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 61740,
                                                          "scheduledDeparture": 61740,
                                                          "serviceDay": 1565074800,
                                                          "stopCount": 63,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9231860",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-07T00:09:00.000Z}
                                                      >
                                                        5:09 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Tualatin Park & Ride",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "3668",
                                                  "departureDelay": 0,
                                                  "headsign": "Tualatin Park & Ride",
                                                  "realtime": false,
                                                  "realtimeArrival": 58260,
                                                  "realtimeDeparture": 58260,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 58260,
                                                  "scheduledDeparture": 58260,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 63,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9231858",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="wednesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.wednesday"
                                                      >
                                                        common.daysOfWeek.wednesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "3668",
                                                          "departureDelay": 0,
                                                          "headsign": "Tualatin Park & Ride",
                                                          "realtime": false,
                                                          "realtimeArrival": 58260,
                                                          "realtimeDeparture": 58260,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 58260,
                                                          "scheduledDeparture": 58260,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 63,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9231858",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-07T23:11:00.000Z}
                                                      >
                                                        4:11 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:94-King City"
                          pattern={
                            Object {
                              "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                              "headsign": "King City",
                              "id": "TriMet:94:0:02",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:94",
                              "longName": "Pacific Hwy/Sherwood",
                              "mode": "BUS",
                              "shortName": "94",
                              "sortOrder": 9100,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9472",
                                "departureDelay": 0,
                                "headsign": "King City",
                                "realtime": false,
                                "realtimeArrival": 55320,
                                "realtimeDeparture": 55320,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 55320,
                                "scheduledDeparture": 55320,
                                "serviceDay": 1565074800,
                                "stopCount": 23,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238192",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9472",
                                "departureDelay": 0,
                                "headsign": "King City",
                                "realtime": false,
                                "realtimeArrival": 55320,
                                "realtimeDeparture": 55320,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 55320,
                                "scheduledDeparture": 55320,
                                "serviceDay": 1565161200,
                                "stopCount": 23,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238192",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9472",
                                "departureDelay": 0,
                                "headsign": "King City",
                                "realtime": false,
                                "realtimeArrival": 55320,
                                "realtimeDeparture": 55320,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 55320,
                                "scheduledDeparture": 55320,
                                "serviceDay": 1565247600,
                                "stopCount": 23,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238192",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "King City",
                                "id": "TriMet:94:0:02",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:94",
                                "longName": "Pacific Hwy/Sherwood",
                                "mode": "BUS",
                                "shortName": "94",
                                "sortOrder": 9100,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565074800,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565161200,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565247600,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Pacific Hwy/Sherwood",
                                          "routeShortName": "94",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          94
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "King City",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565074800,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                          style={
                                            Object {
                                              "marginBottom": -4,
                                            }
                                          }
                                        >
                                          <FormattedDayOfWeek
                                            day="tuesday"
                                          >
                                            <FormattedMessage
                                              id="common.daysOfWeek.tuesday"
                                            >
                                              common.daysOfWeek.tuesday
                                            </FormattedMessage>
                                          </FormattedDayOfWeek>
                                        </div>
                                        <div
                                          className="percy-hide"
                                        >
                                          <DepartureTime
                                            realTime={true}
                                            stopTime={
                                              Object {
                                                "arrivalDelay": 0,
                                                "blockId": "9472",
                                                "departureDelay": 0,
                                                "headsign": "King City",
                                                "realtime": false,
                                                "realtimeArrival": 55320,
                                                "realtimeDeparture": 55320,
                                                "realtimeState": "SCHEDULED",
                                                "scheduledArrival": 55320,
                                                "scheduledDeparture": 55320,
                                                "serviceDay": 1565074800,
                                                "stopCount": 23,
                                                "stopId": "TriMet:715",
                                                "stopIndex": 0,
                                                "timepoint": true,
                                                "tripId": "TriMet:9238192",
                                              }
                                            }
                                          >
                                            <FormattedTime
                                              timeStyle="short"
                                              value={2019-08-06T22:22:00.000Z}
                                            >
                                              3:22 PM
                                            </FormattedTime>
                                          </DepartureTime>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-94"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-94"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "King City",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "9472",
                                                  "departureDelay": 0,
                                                  "headsign": "King City",
                                                  "realtime": false,
                                                  "realtimeArrival": 55320,
                                                  "realtimeDeparture": 55320,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 55320,
                                                  "scheduledDeparture": 55320,
                                                  "serviceDay": 1565074800,
                                                  "stopCount": 23,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9238192",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="tuesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.tuesday"
                                                      >
                                                        common.daysOfWeek.tuesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "9472",
                                                          "departureDelay": 0,
                                                          "headsign": "King City",
                                                          "realtime": false,
                                                          "realtimeArrival": 55320,
                                                          "realtimeDeparture": 55320,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 55320,
                                                          "scheduledDeparture": 55320,
                                                          "serviceDay": 1565074800,
                                                          "stopCount": 23,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9238192",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T22:22:00.000Z}
                                                      >
                                                        3:22 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "King City",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "9472",
                                                  "departureDelay": 0,
                                                  "headsign": "King City",
                                                  "realtime": false,
                                                  "realtimeArrival": 55320,
                                                  "realtimeDeparture": 55320,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 55320,
                                                  "scheduledDeparture": 55320,
                                                  "serviceDay": 1565161200,
                                                  "stopCount": 23,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9238192",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="wednesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.wednesday"
                                                      >
                                                        common.daysOfWeek.wednesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "9472",
                                                          "departureDelay": 0,
                                                          "headsign": "King City",
                                                          "realtime": false,
                                                          "realtimeArrival": 55320,
                                                          "realtimeDeparture": 55320,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 55320,
                                                          "scheduledDeparture": 55320,
                                                          "serviceDay": 1565161200,
                                                          "stopCount": 23,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9238192",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-07T22:22:00.000Z}
                                                      >
                                                        3:22 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "King City",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "9472",
                                                  "departureDelay": 0,
                                                  "headsign": "King City",
                                                  "realtime": false,
                                                  "realtimeArrival": 55320,
                                                  "realtimeDeparture": 55320,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 55320,
                                                  "scheduledDeparture": 55320,
                                                  "serviceDay": 1565247600,
                                                  "stopCount": 23,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9238192",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="thursday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.thursday"
                                                      >
                                                        common.daysOfWeek.thursday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "9472",
                                                          "departureDelay": 0,
                                                          "headsign": "King City",
                                                          "realtime": false,
                                                          "realtimeArrival": 55320,
                                                          "realtimeDeparture": 55320,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 55320,
                                                          "scheduledDeparture": 55320,
                                                          "serviceDay": 1565247600,
                                                          "stopCount": 23,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9238192",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-08T22:22:00.000Z}
                                                      >
                                                        3:22 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:94-Sherwood"
                          pattern={
                            Object {
                              "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                              "headsign": "Sherwood",
                              "id": "TriMet:94:0:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:94",
                              "longName": "Pacific Hwy/Sherwood",
                              "mode": "BUS",
                              "shortName": "94",
                              "sortOrder": 9100,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9468",
                                "departureDelay": 0,
                                "headsign": "Sherwood",
                                "realtime": false,
                                "realtimeArrival": 52080,
                                "realtimeDeparture": 52080,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 52080,
                                "scheduledDeparture": 52080,
                                "serviceDay": 1565074800,
                                "stopCount": 40,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238187",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9372",
                                "departureDelay": 0,
                                "headsign": "Sherwood",
                                "realtime": false,
                                "realtimeArrival": 54120,
                                "realtimeDeparture": 54120,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 54120,
                                "scheduledDeparture": 54120,
                                "serviceDay": 1565074800,
                                "stopCount": 40,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238189",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9474",
                                "departureDelay": 0,
                                "headsign": "Sherwood",
                                "realtime": false,
                                "realtimeArrival": 56880,
                                "realtimeDeparture": 56880,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 56880,
                                "scheduledDeparture": 56880,
                                "serviceDay": 1565074800,
                                "stopCount": 40,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238194",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9470",
                                "departureDelay": 0,
                                "headsign": "Sherwood",
                                "realtime": false,
                                "realtimeArrival": 54720,
                                "realtimeDeparture": 54720,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 54720,
                                "scheduledDeparture": 54720,
                                "serviceDay": 1565074800,
                                "stopCount": 34,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238190",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9470",
                                "departureDelay": 0,
                                "headsign": "Sherwood",
                                "realtime": false,
                                "realtimeArrival": 54720,
                                "realtimeDeparture": 54720,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 54720,
                                "scheduledDeparture": 54720,
                                "serviceDay": 1565161200,
                                "stopCount": 34,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238190",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "9470",
                                "departureDelay": 0,
                                "headsign": "Sherwood",
                                "realtime": false,
                                "realtimeArrival": 54720,
                                "realtimeDeparture": 54720,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 54720,
                                "scheduledDeparture": 54720,
                                "serviceDay": 1565247600,
                                "stopCount": 34,
                                "stopId": "TriMet:715",
                                "stopIndex": 0,
                                "timepoint": true,
                                "tripId": "TriMet:9238190",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Sherwood",
                                "id": "TriMet:94:0:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:94",
                                "longName": "Pacific Hwy/Sherwood",
                                "mode": "BUS",
                                "shortName": "94",
                                "sortOrder": 9100,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9468",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 52080,
                                  "realtimeDeparture": 52080,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 52080,
                                  "scheduledDeparture": 52080,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238187",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9372",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54120,
                                  "realtimeDeparture": 54120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54120,
                                  "scheduledDeparture": 54120,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238189",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9474",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 56880,
                                  "realtimeDeparture": 56880,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 56880,
                                  "scheduledDeparture": 56880,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238194",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565074800,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565161200,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565247600,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Pacific Hwy/Sherwood",
                                          "routeShortName": "94",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          94
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Sherwood",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9468",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 52080,
                                        "realtimeDeparture": 52080,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 52080,
                                        "scheduledDeparture": 52080,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238187",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                          style={
                                            Object {
                                              "marginBottom": -4,
                                            }
                                          }
                                        >
                                          <FormattedDayOfWeek
                                            day="tuesday"
                                          >
                                            <FormattedMessage
                                              id="common.daysOfWeek.tuesday"
                                            >
                                              common.daysOfWeek.tuesday
                                            </FormattedMessage>
                                          </FormattedDayOfWeek>
                                        </div>
                                        <div
                                          className="percy-hide"
                                        >
                                          <DepartureTime
                                            realTime={true}
                                            stopTime={
                                              Object {
                                                "arrivalDelay": 0,
                                                "blockId": "9468",
                                                "departureDelay": 0,
                                                "headsign": "Sherwood",
                                                "realtime": false,
                                                "realtimeArrival": 52080,
                                                "realtimeDeparture": 52080,
                                                "realtimeState": "SCHEDULED",
                                                "scheduledArrival": 52080,
                                                "scheduledDeparture": 52080,
                                                "serviceDay": 1565074800,
                                                "stopCount": 40,
                                                "stopId": "TriMet:715",
                                                "stopIndex": 0,
                                                "timepoint": true,
                                                "tripId": "TriMet:9238187",
                                              }
                                            }
                                          >
                                            <FormattedTime
                                              timeStyle="short"
                                              value={2019-08-06T21:28:00.000Z}
                                            >
                                              2:28 PM
                                            </FormattedTime>
                                          </DepartureTime>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-94"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-94"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Sherwood",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "9468",
                                                  "departureDelay": 0,
                                                  "headsign": "Sherwood",
                                                  "realtime": false,
                                                  "realtimeArrival": 52080,
                                                  "realtimeDeparture": 52080,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 52080,
                                                  "scheduledDeparture": 52080,
                                                  "serviceDay": 1565074800,
                                                  "stopCount": 40,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9238187",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="tuesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.tuesday"
                                                      >
                                                        common.daysOfWeek.tuesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "9468",
                                                          "departureDelay": 0,
                                                          "headsign": "Sherwood",
                                                          "realtime": false,
                                                          "realtimeArrival": 52080,
                                                          "realtimeDeparture": 52080,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 52080,
                                                          "scheduledDeparture": 52080,
                                                          "serviceDay": 1565074800,
                                                          "stopCount": 40,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9238187",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T21:28:00.000Z}
                                                      >
                                                        2:28 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Sherwood",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "9372",
                                                  "departureDelay": 0,
                                                  "headsign": "Sherwood",
                                                  "realtime": false,
                                                  "realtimeArrival": 54120,
                                                  "realtimeDeparture": 54120,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 54120,
                                                  "scheduledDeparture": 54120,
                                                  "serviceDay": 1565074800,
                                                  "stopCount": 40,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9238189",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="tuesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.tuesday"
                                                      >
                                                        common.daysOfWeek.tuesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "9372",
                                                          "departureDelay": 0,
                                                          "headsign": "Sherwood",
                                                          "realtime": false,
                                                          "realtimeArrival": 54120,
                                                          "realtimeDeparture": 54120,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 54120,
                                                          "scheduledDeparture": 54120,
                                                          "serviceDay": 1565074800,
                                                          "stopCount": 40,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9238189",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T22:02:00.000Z}
                                                      >
                                                        3:02 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Sherwood",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "9470",
                                                  "departureDelay": 0,
                                                  "headsign": "Sherwood",
                                                  "realtime": false,
                                                  "realtimeArrival": 54720,
                                                  "realtimeDeparture": 54720,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 54720,
                                                  "scheduledDeparture": 54720,
                                                  "serviceDay": 1565074800,
                                                  "stopCount": 34,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 0,
                                                  "timepoint": true,
                                                  "tripId": "TriMet:9238190",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="tuesday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.tuesday"
                                                      >
                                                        common.daysOfWeek.tuesday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "9470",
                                                          "departureDelay": 0,
                                                          "headsign": "Sherwood",
                                                          "realtime": false,
                                                          "realtimeArrival": 54720,
                                                          "realtimeDeparture": 54720,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 54720,
                                                          "scheduledDeparture": 54720,
                                                          "serviceDay": 1565074800,
                                                          "stopCount": 34,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 0,
                                                          "timepoint": true,
                                                          "tripId": "TriMet:9238190",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T22:12:00.000Z}
                                                      >
                                                        3:12 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                      </div>
                      <div
                        style={
                          Object {
                            "marginTop": "20px",
                          }
                        }
                      >
                        <label
                          style={
                            Object {
                              "fontSize": "small",
                              "fontWeight": 300,
                            }
                          }
                        >
                          <styled.span
                            margin={0.25}
                          >
                            <span
                              className="sc-jXktde fKyBCi"
                            >
                              <input
                                name="autoUpdate"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </span>
                          </styled.span>
                          <FormattedMessage
                            id="components.LiveStopTimes.autoRefresh"
                          >
                            components.LiveStopTimes.autoRefresh
                          </FormattedMessage>
                        </label>
                        <button
                          className="link-button pull-right percy-hide"
                          onClick={[Function]}
                          style={
                            Object {
                              "fontSize": "small",
                            }
                          }
                        >
                          <IconWithText
                            Icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Redo",
                                "render": [Function],
                              }
                            }
                            spin={true}
                          >
                            <Styled(styled.span)>
                              <span
                                className="sc-gInthZ sc-euMpEg dOezsE KEner"
                              >
                                <Redo>
                                  <StyledIconBase
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="StyledIconBase-ea9ulj-0 iuNRof"
                                        fill="currentColor"
                                        focusable="false"
                                        viewBox="0 0 512 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </Redo>
                              </span>
                            </Styled(styled.span)>
                            <FormattedTime
                              timeStyle="short"
                              timeZone="America/Los_Angeles"
                              value={1565052624406}
                            >
                              5:50 PM
                            </FormattedTime>
                          </IconWithText>
                        </button>
                        <RelatedStopsPanel
                          homeTimezone="America/Los_Angeles"
                          setHoveredStop={[Function]}
                          stopData={
                            Object {
                              "code": "715",
                              "desc": "Eastbound stop in Portland (Stop ID 715)",
                              "id": "TriMet:715",
                              "lat": 45.522912,
                              "locationType": 0,
                              "lon": -122.678538,
                              "name": "W Burnside & SW 8th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                },
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:94",
                                  "longName": "Pacific Hwy/Sherwood",
                                  "mode": "BUS",
                                  "shortName": "94",
                                  "sortOrder": 9100,
                                },
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:36",
                                  "longName": "South Shore",
                                  "mode": "BUS",
                                  "shortName": "36",
                                  "sortOrder": 3900,
                                },
                              ],
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Tualatin Park & Ride",
                                    "id": "TriMet:36:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3670",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 61740,
                                      "realtimeDeparture": 61740,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 61740,
                                      "scheduledDeparture": 61740,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231860",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565161200,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9468",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 52080,
                                      "realtimeDeparture": 52080,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 52080,
                                      "scheduledDeparture": 52080,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238187",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9372",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54120,
                                      "realtimeDeparture": 54120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54120,
                                      "scheduledDeparture": 54120,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238189",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9474",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 56880,
                                      "realtimeDeparture": 56880,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 56880,
                                      "scheduledDeparture": 56880,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238194",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "King City",
                                    "id": "TriMet:94:0:02",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565074800,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565161200,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565247600,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:03",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565074800,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565161200,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565247600,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2045",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 64859,
                                      "realtimeDeparture": 64859,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 64859,
                                      "scheduledDeparture": 64859,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230358",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2047",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 66668,
                                      "realtimeDeparture": 66668,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 66668,
                                      "scheduledDeparture": 66668,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230360",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2048",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 67628,
                                      "realtimeDeparture": 67628,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 67628,
                                      "scheduledDeparture": 67628,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230361",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2046",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 65759,
                                      "realtimeDeparture": 65759,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 65759,
                                      "scheduledDeparture": 65759,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230359",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2036",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 70028,
                                      "realtimeDeparture": 70028,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 70028,
                                      "scheduledDeparture": 70028,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230363",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2071",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 72436,
                                      "realtimeDeparture": 72436,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 72436,
                                      "scheduledDeparture": 72436,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230365",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565052624406,
                              "url": "http://trimet.org/#tracker/stop/715",
                              "vehicleType": -999,
                              "vehicleTypeSet": false,
                              "wheelchairBoarding": 0,
                              "zoneId": "B",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <RelatedPanel
                            expanded={false}
                            onToggleExpanded={[Function]}
                            title={
                              <Memo(MemoizedFormattedMessage)
                                id="components.RelatedStopsPanel.relatedStops"
                              />
                            }
                            titleWidth="13ch"
                          >
                            <h4
                              className="related-panel-title"
                              style={
                                Object {
                                  "width": "13ch",
                                }
                              }
                            >
                              <FormattedMessage
                                id="components.RelatedStopsPanel.relatedStops"
                              >
                                components.RelatedStopsPanel.relatedStops
                              </FormattedMessage>
                            </h4>
                            <div
                              className="related-panel-container"
                            >
                              <ul
                                className="related-items-list list-unstyled"
                              />
                            </div>
                          </RelatedPanel>
                        </RelatedStopsPanel>
                        <Connect(injectIntl(AmenitiesPanel))
                          stopData={
                            Object {
                              "code": "715",
                              "desc": "Eastbound stop in Portland (Stop ID 715)",
                              "id": "TriMet:715",
                              "lat": 45.522912,
                              "locationType": 0,
                              "lon": -122.678538,
                              "name": "W Burnside & SW 8th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                },
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:94",
                                  "longName": "Pacific Hwy/Sherwood",
                                  "mode": "BUS",
                                  "shortName": "94",
                                  "sortOrder": 9100,
                                },
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:36",
                                  "longName": "South Shore",
                                  "mode": "BUS",
                                  "shortName": "36",
                                  "sortOrder": 3900,
                                },
                              ],
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Tualatin Park & Ride",
                                    "id": "TriMet:36:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3670",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 61740,
                                      "realtimeDeparture": 61740,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 61740,
                                      "scheduledDeparture": 61740,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231860",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565161200,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9468",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 52080,
                                      "realtimeDeparture": 52080,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 52080,
                                      "scheduledDeparture": 52080,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238187",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9372",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54120,
                                      "realtimeDeparture": 54120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54120,
                                      "scheduledDeparture": 54120,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238189",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9474",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 56880,
                                      "realtimeDeparture": 56880,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 56880,
                                      "scheduledDeparture": 56880,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238194",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "King City",
                                    "id": "TriMet:94:0:02",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565074800,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565161200,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565247600,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:03",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565074800,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565161200,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565247600,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2045",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 64859,
                                      "realtimeDeparture": 64859,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 64859,
                                      "scheduledDeparture": 64859,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230358",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2047",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 66668,
                                      "realtimeDeparture": 66668,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 66668,
                                      "scheduledDeparture": 66668,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230360",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2048",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 67628,
                                      "realtimeDeparture": 67628,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 67628,
                                      "scheduledDeparture": 67628,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230361",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2046",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 65759,
                                      "realtimeDeparture": 65759,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 65759,
                                      "scheduledDeparture": 65759,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230359",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2036",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 70028,
                                      "realtimeDeparture": 70028,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 70028,
                                      "scheduledDeparture": 70028,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230363",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2071",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 72436,
                                      "realtimeDeparture": 72436,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 72436,
                                      "scheduledDeparture": 72436,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230365",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565052624406,
                              "url": "http://trimet.org/#tracker/stop/715",
                              "vehicleType": -999,
                              "vehicleTypeSet": false,
                              "wheelchairBoarding": 0,
                              "zoneId": "B",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <injectIntl(AmenitiesPanel)
                            stopData={
                              Object {
                                "code": "715",
                                "desc": "Eastbound stop in Portland (Stop ID 715)",
                                "id": "TriMet:715",
                                "lat": 45.522912,
                                "locationType": 0,
                                "lon": -122.678538,
                                "name": "W Burnside & SW 8th",
                                "routes": Array [
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:20",
                                    "longName": "Burnside/Stark",
                                    "mode": "BUS",
                                    "shortName": "20",
                                    "sortOrder": 2600,
                                  },
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:94",
                                    "longName": "Pacific Hwy/Sherwood",
                                    "mode": "BUS",
                                    "shortName": "94",
                                    "sortOrder": 9100,
                                  },
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:36",
                                    "longName": "South Shore",
                                    "mode": "BUS",
                                    "shortName": "36",
                                    "sortOrder": 3900,
                                  },
                                ],
                                "stopTimes": Array [
                                  Object {
                                    "pattern": Object {
                                      "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "Tualatin Park & Ride",
                                      "id": "TriMet:36:0:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3668",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 58260,
                                        "realtimeDeparture": 58260,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 58260,
                                        "scheduledDeparture": 58260,
                                        "serviceDay": 1565074800,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231858",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3670",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 61740,
                                        "realtimeDeparture": 61740,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 61740,
                                        "scheduledDeparture": 61740,
                                        "serviceDay": 1565074800,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231860",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3668",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 58260,
                                        "realtimeDeparture": 58260,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 58260,
                                        "scheduledDeparture": 58260,
                                        "serviceDay": 1565161200,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231858",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "Sherwood",
                                      "id": "TriMet:94:0:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9468",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 52080,
                                        "realtimeDeparture": 52080,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 52080,
                                        "scheduledDeparture": 52080,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238187",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9372",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54120,
                                        "realtimeDeparture": 54120,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54120,
                                        "scheduledDeparture": 54120,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238189",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9474",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 56880,
                                        "realtimeDeparture": 56880,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 56880,
                                        "scheduledDeparture": 56880,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238194",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "King City",
                                      "id": "TriMet:94:0:02",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565074800,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565161200,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565247600,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "Sherwood",
                                      "id": "TriMet:94:0:03",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9470",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54720,
                                        "realtimeDeparture": 54720,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54720,
                                        "scheduledDeparture": 54720,
                                        "serviceDay": 1565074800,
                                        "stopCount": 34,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238190",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9470",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54720,
                                        "realtimeDeparture": 54720,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54720,
                                        "scheduledDeparture": 54720,
                                        "serviceDay": 1565161200,
                                        "stopCount": 34,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238190",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9470",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54720,
                                        "realtimeDeparture": 54720,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54720,
                                        "scheduledDeparture": 54720,
                                        "serviceDay": 1565247600,
                                        "stopCount": 34,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238190",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2045",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 64859,
                                        "realtimeDeparture": 64859,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 64859,
                                        "scheduledDeparture": 64859,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230358",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2047",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 66668,
                                        "realtimeDeparture": 66668,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 66668,
                                        "scheduledDeparture": 66668,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230360",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2048",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 67628,
                                        "realtimeDeparture": 67628,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 67628,
                                        "scheduledDeparture": 67628,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230361",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:01",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2046",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 65759,
                                        "realtimeDeparture": 65759,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 65759,
                                        "scheduledDeparture": 65759,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230359",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2036",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 70028,
                                        "realtimeDeparture": 70028,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 70028,
                                        "scheduledDeparture": 70028,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230363",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2071",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 72436,
                                        "realtimeDeparture": 72436,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 72436,
                                        "scheduledDeparture": 72436,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230365",
                                      },
                                    ],
                                  },
                                ],
                                "stopTimesLastUpdated": 1565052624406,
                                "url": "http://trimet.org/#tracker/stop/715",
                                "vehicleType": -999,
                                "vehicleTypeSet": false,
                                "wheelchairBoarding": 0,
                                "zoneId": "B",
                              }
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <AmenitiesPanel
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en-US",
                                  "defaultRichTextElements": undefined,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en-US",
                                  "messages": Object {},
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              stopData={
                                Object {
                                  "code": "715",
                                  "desc": "Eastbound stop in Portland (Stop ID 715)",
                                  "id": "TriMet:715",
                                  "lat": 45.522912,
                                  "locationType": 0,
                                  "lon": -122.678538,
                                  "name": "W Burnside & SW 8th",
                                  "routes": Array [
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:20",
                                      "longName": "Burnside/Stark",
                                      "mode": "BUS",
                                      "shortName": "20",
                                      "sortOrder": 2600,
                                    },
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:94",
                                      "longName": "Pacific Hwy/Sherwood",
                                      "mode": "BUS",
                                      "shortName": "94",
                                      "sortOrder": 9100,
                                    },
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:36",
                                      "longName": "South Shore",
                                      "mode": "BUS",
                                      "shortName": "36",
                                      "sortOrder": 3900,
                                    },
                                  ],
                                  "stopTimes": Array [
                                    Object {
                                      "pattern": Object {
                                        "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "Tualatin Park & Ride",
                                        "id": "TriMet:36:0:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "3668",
                                          "departureDelay": 0,
                                          "headsign": "Tualatin Park & Ride",
                                          "realtime": false,
                                          "realtimeArrival": 58260,
                                          "realtimeDeparture": 58260,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 58260,
                                          "scheduledDeparture": 58260,
                                          "serviceDay": 1565074800,
                                          "stopCount": 63,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9231858",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "3670",
                                          "departureDelay": 0,
                                          "headsign": "Tualatin Park & Ride",
                                          "realtime": false,
                                          "realtimeArrival": 61740,
                                          "realtimeDeparture": 61740,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 61740,
                                          "scheduledDeparture": 61740,
                                          "serviceDay": 1565074800,
                                          "stopCount": 63,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9231860",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "3668",
                                          "departureDelay": 0,
                                          "headsign": "Tualatin Park & Ride",
                                          "realtime": false,
                                          "realtimeArrival": 58260,
                                          "realtimeDeparture": 58260,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 58260,
                                          "scheduledDeparture": 58260,
                                          "serviceDay": 1565161200,
                                          "stopCount": 63,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9231858",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "Sherwood",
                                        "id": "TriMet:94:0:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9468",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 52080,
                                          "realtimeDeparture": 52080,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 52080,
                                          "scheduledDeparture": 52080,
                                          "serviceDay": 1565074800,
                                          "stopCount": 40,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238187",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9372",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54120,
                                          "realtimeDeparture": 54120,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54120,
                                          "scheduledDeparture": 54120,
                                          "serviceDay": 1565074800,
                                          "stopCount": 40,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238189",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9474",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 56880,
                                          "realtimeDeparture": 56880,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 56880,
                                          "scheduledDeparture": 56880,
                                          "serviceDay": 1565074800,
                                          "stopCount": 40,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238194",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "King City",
                                        "id": "TriMet:94:0:02",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9472",
                                          "departureDelay": 0,
                                          "headsign": "King City",
                                          "realtime": false,
                                          "realtimeArrival": 55320,
                                          "realtimeDeparture": 55320,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 55320,
                                          "scheduledDeparture": 55320,
                                          "serviceDay": 1565074800,
                                          "stopCount": 23,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238192",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9472",
                                          "departureDelay": 0,
                                          "headsign": "King City",
                                          "realtime": false,
                                          "realtimeArrival": 55320,
                                          "realtimeDeparture": 55320,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 55320,
                                          "scheduledDeparture": 55320,
                                          "serviceDay": 1565161200,
                                          "stopCount": 23,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238192",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9472",
                                          "departureDelay": 0,
                                          "headsign": "King City",
                                          "realtime": false,
                                          "realtimeArrival": 55320,
                                          "realtimeDeparture": 55320,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 55320,
                                          "scheduledDeparture": 55320,
                                          "serviceDay": 1565247600,
                                          "stopCount": 23,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238192",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "Sherwood",
                                        "id": "TriMet:94:0:03",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9470",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54720,
                                          "realtimeDeparture": 54720,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54720,
                                          "scheduledDeparture": 54720,
                                          "serviceDay": 1565074800,
                                          "stopCount": 34,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238190",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9470",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54720,
                                          "realtimeDeparture": 54720,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54720,
                                          "scheduledDeparture": 54720,
                                          "serviceDay": 1565161200,
                                          "stopCount": 34,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238190",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9470",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54720,
                                          "realtimeDeparture": 54720,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54720,
                                          "scheduledDeparture": 54720,
                                          "serviceDay": 1565247600,
                                          "stopCount": 34,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238190",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2045",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 64859,
                                          "realtimeDeparture": 64859,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 64859,
                                          "scheduledDeparture": 64859,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230358",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2047",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 66668,
                                          "realtimeDeparture": 66668,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 66668,
                                          "scheduledDeparture": 66668,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230360",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2048",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 67628,
                                          "realtimeDeparture": 67628,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 67628,
                                          "scheduledDeparture": 67628,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230361",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:01",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2046",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 65759,
                                          "realtimeDeparture": 65759,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 65759,
                                          "scheduledDeparture": 65759,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230359",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2036",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 70028,
                                          "realtimeDeparture": 70028,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 70028,
                                          "scheduledDeparture": 70028,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230363",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2071",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 72436,
                                          "realtimeDeparture": 72436,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 72436,
                                          "scheduledDeparture": 72436,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230365",
                                        },
                                      ],
                                    },
                                  ],
                                  "stopTimesLastUpdated": 1565052624406,
                                  "url": "http://trimet.org/#tracker/stop/715",
                                  "vehicleType": -999,
                                  "vehicleTypeSet": false,
                                  "wheelchairBoarding": 0,
                                  "zoneId": "B",
                                }
                              }
                              stopViewerConfig={
                                Object {
                                  "nearbyRadius": 250,
                                  "numberOfDepartures": 3,
                                  "showBlockIds": false,
                                  "timeRange": 345600,
                                }
                              }
                            >
                              <RelatedPanel
                                expanded={false}
                                onToggleExpanded={[Function]}
                                title="components.AmenitiesPanel.nearbyAmenities"
                                titleWidth="16ch"
                              >
                                <h4
                                  className="related-panel-title"
                                  style={
                                    Object {
                                      "width": "16ch",
                                    }
                                  }
                                >
                                  components.AmenitiesPanel.nearbyAmenities
                                </h4>
                                <div
                                  className="related-panel-container"
                                >
                                  <ul
                                    className="related-items-list list-unstyled"
                                  >
                                    <li
                                      className="related-item"
                                    >
                                      <div
                                        className="item-label"
                                      >
                                        <styled.div>
                                          <div
                                            className="sc-eFuaqX eZHYvB"
                                          >
                                            P
                                          </div>
                                        </styled.div>
                                        <FormattedMessage
                                          id="components.AmenitiesPanel.noPRLotsFound"
                                        >
                                          components.AmenitiesPanel.noPRLotsFound
                                        </FormattedMessage>
                                      </div>
                                    </li>
                                  </ul>
                                </div>
                              </RelatedPanel>
                            </AmenitiesPanel>
                          </injectIntl(AmenitiesPanel)>
                        </Connect(injectIntl(AmenitiesPanel))>
                      </div>
                    </LiveStopTimes>
                  </div>
                </styled.div>
              </div>
            </div>
          </StopViewer>
        </Connect(StopViewer)>
      </WrappedComponent>
    </injectIntl(WrappedComponent)>
  </Provider>
</IntlProvider>
`;

exports[`components > viewers > stop viewer should render with TriMet transit index data 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <injectIntl(WrappedComponent)>
      <WrappedComponent
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en-US",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en-US",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
      >
        <Connect(StopViewer)
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en-US",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en-US",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <StopViewer
            enableFavoriteStops={false}
            favoriteStops={Array []}
            fetchStopInfo={[Function]}
            findStopTimesForStop={[Function]}
            forgetStop={[Function]}
            homeTimezone="America/Los_Angeles"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en-US",
                "defaultRichTextElements": undefined,
                "formatDate": [Function],
                "formatDateTimeRange": [Function],
                "formatDateToParts": [Function],
                "formatDisplayName": [Function],
                "formatList": [Function],
                "formatListToParts": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getDisplayNames": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {},
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
                "wrapRichTextChunksInFragment": undefined,
              }
            }
            rememberStop={[Function]}
            setHoveredStop={[Function]}
            setLocation={[Function]}
            setMainPanelContent={[Function]}
            showNearbyStops={true}
            stopData={
              Object {
                "agencyName": "TriMet",
                "amenities": Array [
                  "Bench near stop",
                  "Crosswalk near stop",
                  "Curb ramp near stop",
                  "Lighting at stop",
                  "Pavement at back door",
                  "Pavement at front door",
                  "Schedule display",
                  "Sidewalk at stop",
                ],
                "code": "715",
                "desc": "Eastbound stop in Portland (Stop ID 715)",
                "id": "TriMet:715",
                "lat": 45.522912,
                "lon": -122.678538,
                "mode": "BUS",
                "name": "W Burnside & SW 8th",
                "routes": Array [
                  Object {
                    "agencyName": "TriMet",
                    "id": "TriMet:20",
                    "longName": "Burnside/Stark",
                    "mode": "BUS",
                    "shortName": "20",
                    "sortOrder": 2600,
                    "sortOrderSet": true,
                    "type": 3,
                  },
                ],
                "rsn": "20, 36, 94",
                "stopTimes": Array [
                  Object {
                    "pattern": Object {
                      "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "Tualatin Park & Ride",
                      "id": "TriMet:36:0:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "3668",
                        "departureDelay": 0,
                        "headsign": "Tualatin Park & Ride",
                        "realtime": false,
                        "realtimeArrival": 58260,
                        "realtimeDeparture": 58260,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 58260,
                        "scheduledDeparture": 58260,
                        "serviceDay": 1565074800,
                        "stopCount": 63,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9231858",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "3670",
                        "departureDelay": 0,
                        "headsign": "Tualatin Park & Ride",
                        "realtime": false,
                        "realtimeArrival": 61740,
                        "realtimeDeparture": 61740,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 61740,
                        "scheduledDeparture": 61740,
                        "serviceDay": 1565074800,
                        "stopCount": 63,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9231860",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "3668",
                        "departureDelay": 0,
                        "headsign": "Tualatin Park & Ride",
                        "realtime": false,
                        "realtimeArrival": 58260,
                        "realtimeDeparture": 58260,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 58260,
                        "scheduledDeparture": 58260,
                        "serviceDay": 1565161200,
                        "stopCount": 63,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9231858",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "Sherwood",
                      "id": "TriMet:94:0:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9468",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 52080,
                        "realtimeDeparture": 52080,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 52080,
                        "scheduledDeparture": 52080,
                        "serviceDay": 1565074800,
                        "stopCount": 40,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238187",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9372",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54120,
                        "realtimeDeparture": 54120,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54120,
                        "scheduledDeparture": 54120,
                        "serviceDay": 1565074800,
                        "stopCount": 40,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238189",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9474",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 56880,
                        "realtimeDeparture": 56880,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 56880,
                        "scheduledDeparture": 56880,
                        "serviceDay": 1565074800,
                        "stopCount": 40,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238194",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "King City",
                      "id": "TriMet:94:0:02",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9472",
                        "departureDelay": 0,
                        "headsign": "King City",
                        "realtime": false,
                        "realtimeArrival": 55320,
                        "realtimeDeparture": 55320,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 55320,
                        "scheduledDeparture": 55320,
                        "serviceDay": 1565074800,
                        "stopCount": 23,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238192",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9472",
                        "departureDelay": 0,
                        "headsign": "King City",
                        "realtime": false,
                        "realtimeArrival": 55320,
                        "realtimeDeparture": 55320,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 55320,
                        "scheduledDeparture": 55320,
                        "serviceDay": 1565161200,
                        "stopCount": 23,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238192",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9472",
                        "departureDelay": 0,
                        "headsign": "King City",
                        "realtime": false,
                        "realtimeArrival": 55320,
                        "realtimeDeparture": 55320,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 55320,
                        "scheduledDeparture": 55320,
                        "serviceDay": 1565247600,
                        "stopCount": 23,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238192",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                      "headsign": "Sherwood",
                      "id": "TriMet:94:0:03",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9470",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54720,
                        "realtimeDeparture": 54720,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54720,
                        "scheduledDeparture": 54720,
                        "serviceDay": 1565074800,
                        "stopCount": 34,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238190",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9470",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54720,
                        "realtimeDeparture": 54720,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54720,
                        "scheduledDeparture": 54720,
                        "serviceDay": 1565161200,
                        "stopCount": 34,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238190",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "9470",
                        "departureDelay": 0,
                        "headsign": "Sherwood",
                        "realtime": false,
                        "realtimeArrival": 54720,
                        "realtimeDeparture": 54720,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 54720,
                        "scheduledDeparture": 54720,
                        "serviceDay": 1565247600,
                        "stopCount": 34,
                        "stopId": "TriMet:715",
                        "stopIndex": 0,
                        "timepoint": true,
                        "tripId": "TriMet:9238190",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:04",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2067",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 63959,
                        "realtimeDeparture": 63959,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 63959,
                        "scheduledDeparture": 63959,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230357",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2045",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 64859,
                        "realtimeDeparture": 64859,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 64859,
                        "scheduledDeparture": 64859,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230358",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2047",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 66668,
                        "realtimeDeparture": 66668,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 66668,
                        "scheduledDeparture": 66668,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230360",
                      },
                    ],
                  },
                  Object {
                    "pattern": Object {
                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                      "headsign": "Gresham TC",
                      "id": "TriMet:20:1:01",
                    },
                    "times": Array [
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2046",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 65759,
                        "realtimeDeparture": 65759,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 65759,
                        "scheduledDeparture": 65759,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230359",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2036",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 70028,
                        "realtimeDeparture": 70028,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 70028,
                        "scheduledDeparture": 70028,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230363",
                      },
                      Object {
                        "arrivalDelay": 0,
                        "blockId": "2071",
                        "departureDelay": 0,
                        "headsign": "Gresham TC",
                        "realtime": false,
                        "realtimeArrival": 72436,
                        "realtimeDeparture": 72436,
                        "realtimeState": "SCHEDULED",
                        "scheduledArrival": 72436,
                        "scheduledDeparture": 72436,
                        "serviceDay": 1564988400,
                        "stopCount": 132,
                        "stopId": "TriMet:715",
                        "stopIndex": 42,
                        "timepoint": false,
                        "tripId": "TriMet:9230365",
                      },
                    ],
                  },
                ],
                "stopTimesLastUpdated": 1565051923389,
                "type": 3,
                "url": "http://trimet.org/#tracker/stop/715",
              }
            }
            stopViewerConfig={
              Object {
                "nearbyRadius": 250,
                "numberOfDepartures": 3,
                "showBlockIds": false,
                "timeRange": 345600,
              }
            }
            toggleAutoRefresh={[Function]}
            transitOperators={Array []}
            viewedStop={
              Object {
                "stopId": "TriMet:715",
              }
            }
            zoomToStop={[Function]}
          >
            <div
              className="stop-viewer"
            >
              <div
                className="stop-viewer-header"
              >
                <div
                  className="back-button-container"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="btn btn-sm btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "ArrowLeft",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <ArrowLeft>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="m257.5 445.1-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </ArrowLeft>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="common.forms.back"
                        >
                          common.forms.back
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </Button>
                </div>
                <div
                  className="header-text"
                >
                  <span>
                    W Burnside & SW 8th
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "clear": "both",
                    }
                  }
                />
              </div>
              <div
                className="stop-viewer-body"
              >
                <div
                  style={
                    Object {
                      "marginBottom": "10px",
                    }
                  }
                >
                  <div>
                    <FormattedMessage
                      id="components.StopViewer.displayStopId"
                      values={
                        Object {
                          "stopId": "715",
                          "strong": [Function],
                        }
                      }
                    >
                      components.StopViewer.displayStopId
                    </FormattedMessage>
                    <button
                      className="link-button"
                      onClick={[Function]}
                      title="components.StopViewer.zoomToStop"
                    >
                      <Icon
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Search",
                            "render": [Function],
                          }
                        }
                        style={
                          Object {
                            "marginLeft": "0.2em",
                          }
                        }
                      >
                        <styled.span
                          style={
                            Object {
                              "marginLeft": "0.2em",
                            }
                          }
                        >
                          <span
                            className="sc-gInthZ dOezsE"
                            style={
                              Object {
                                "marginLeft": "0.2em",
                              }
                            }
                          >
                            <Search>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 512 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 512 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7 405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Search>
                          </span>
                        </styled.span>
                      </Icon>
                    </button>
                    <button
                      className="link-button pull-right"
                      onClick={[Function]}
                      style={
                        Object {
                          "fontSize": "small",
                        }
                      }
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "Calendar",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <Calendar>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </Calendar>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="components.StopViewer.viewSchedule"
                        >
                          components.StopViewer.viewSchedule
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </div>
                  <FromToLocationPicker
                    label={true}
                    onFromClick={[Function]}
                    onToClick={[Function]}
                  >
                    <strong>
                      <FormattedMessage
                        description="Label to prompt the user to plan a trip"
                        id="otpUi.FromToLocationPicker.planATrip"
                      >
                        otpUi.FromToLocationPicker.planATrip
                      </FormattedMessage>
                    </strong>
                    <styled__FromToPickerSpan>
                      <span
                        className="styled__FromToPickerSpan-sc-vb4790-1 dWHacc"
                      >
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="from"
                            >
                              <styled__FromIcon
                                className=""
                                size="0.9em"
                                title="From Location Icon"
                              >
                                <DotCircle
                                  className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                  size="0.9em"
                                  title="From Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__FromIcon-n5xcvc-0 bnFcGf"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                    size="0.9em"
                                    title="From Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                      size="0.9em"
                                      title="From Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__FromIcon-n5xcvc-0 bnFcGf"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 512 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          From Location Icon
                                        </title>
                                        <path
                                          d="M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </DotCircle>
                              </styled__FromIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'from' button of the picker"
                                  id="otpUi.FromToLocationPicker.from"
                                >
                                  otpUi.FromToLocationPicker.from
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                        <styled__LocationPickerSpan>
                          <span
                            className="styled__LocationPickerSpan-sc-vb4790-0 fSBBPp"
                          >
                            <LocationIcon
                              size="0.9em"
                              type="to"
                            >
                              <styled__ToIcon
                                className=""
                                size="0.9em"
                                title="To Location Icon"
                              >
                                <MapMarkerAlt
                                  className="styled__ToIcon-n5xcvc-2 bCTefk"
                                  size="0.9em"
                                  title="To Location Icon"
                                >
                                  <StyledIconBase
                                    className="styled__ToIcon-n5xcvc-2 bCTefk"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 384 512"
                                    size="0.9em"
                                    title="To Location Icon"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 384 512"
                                      size="0.9em"
                                      title="To Location Icon"
                                    >
                                      <svg
                                        className="StyledIconBase-ea9ulj-0 iuNRof styled__ToIcon-n5xcvc-2 bCTefk"
                                        fill="currentColor"
                                        focusable="false"
                                        height="0.9em"
                                        role="img"
                                        viewBox="0 0 384 512"
                                        width="0.9em"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <title
                                          key="icon-title"
                                        >
                                          To Location Icon
                                        </title>
                                        <path
                                          d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </MapMarkerAlt>
                              </styled__ToIcon>
                            </LocationIcon>
                            <styled__Button
                              onClick={[Function]}
                            >
                              <button
                                className="styled__Button-sc-vb4790-2 gmCNPA"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  description="Text for the 'to' button of the picker"
                                  id="otpUi.FromToLocationPicker.to"
                                >
                                  otpUi.FromToLocationPicker.to
                                </FormattedMessage>
                              </button>
                            </styled__Button>
                          </span>
                        </styled__LocationPickerSpan>
                      </span>
                    </styled__FromToPickerSpan>
                  </FromToLocationPicker>
                </div>
                <styled.div>
                  <div
                    className="sc-gyUflj heQDAy"
                  >
                    <LiveStopTimes
                      findStopTimesForStop={[Function]}
                      homeTimezone="America/Los_Angeles"
                      setHoveredStop={[Function]}
                      showNearbyStops={true}
                      stopData={
                        Object {
                          "agencyName": "TriMet",
                          "amenities": Array [
                            "Bench near stop",
                            "Crosswalk near stop",
                            "Curb ramp near stop",
                            "Lighting at stop",
                            "Pavement at back door",
                            "Pavement at front door",
                            "Schedule display",
                            "Sidewalk at stop",
                          ],
                          "code": "715",
                          "desc": "Eastbound stop in Portland (Stop ID 715)",
                          "id": "TriMet:715",
                          "lat": 45.522912,
                          "lon": -122.678538,
                          "mode": "BUS",
                          "name": "W Burnside & SW 8th",
                          "routes": Array [
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            },
                          ],
                          "rsn": "20, 36, 94",
                          "stopTimes": Array [
                            Object {
                              "pattern": Object {
                                "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Tualatin Park & Ride",
                                "id": "TriMet:36:0:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3668",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 58260,
                                  "realtimeDeparture": 58260,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 58260,
                                  "scheduledDeparture": 58260,
                                  "serviceDay": 1565074800,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231858",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3670",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 61740,
                                  "realtimeDeparture": 61740,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 61740,
                                  "scheduledDeparture": 61740,
                                  "serviceDay": 1565074800,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231860",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "3668",
                                  "departureDelay": 0,
                                  "headsign": "Tualatin Park & Ride",
                                  "realtime": false,
                                  "realtimeArrival": 58260,
                                  "realtimeDeparture": 58260,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 58260,
                                  "scheduledDeparture": 58260,
                                  "serviceDay": 1565161200,
                                  "stopCount": 63,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9231858",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Sherwood",
                                "id": "TriMet:94:0:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9468",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 52080,
                                  "realtimeDeparture": 52080,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 52080,
                                  "scheduledDeparture": 52080,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238187",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9372",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54120,
                                  "realtimeDeparture": 54120,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54120,
                                  "scheduledDeparture": 54120,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238189",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9474",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 56880,
                                  "realtimeDeparture": 56880,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 56880,
                                  "scheduledDeparture": 56880,
                                  "serviceDay": 1565074800,
                                  "stopCount": 40,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238194",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "King City",
                                "id": "TriMet:94:0:02",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565074800,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565161200,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9472",
                                  "departureDelay": 0,
                                  "headsign": "King City",
                                  "realtime": false,
                                  "realtimeArrival": 55320,
                                  "realtimeDeparture": 55320,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 55320,
                                  "scheduledDeparture": 55320,
                                  "serviceDay": 1565247600,
                                  "stopCount": 23,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238192",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                "headsign": "Sherwood",
                                "id": "TriMet:94:0:03",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565074800,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565161200,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "9470",
                                  "departureDelay": 0,
                                  "headsign": "Sherwood",
                                  "realtime": false,
                                  "realtimeArrival": 54720,
                                  "realtimeDeparture": 54720,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 54720,
                                  "scheduledDeparture": 54720,
                                  "serviceDay": 1565247600,
                                  "stopCount": 34,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 0,
                                  "timepoint": true,
                                  "tripId": "TriMet:9238190",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2067",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 63959,
                                  "realtimeDeparture": 63959,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 63959,
                                  "scheduledDeparture": 63959,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230357",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2045",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 64859,
                                  "realtimeDeparture": 64859,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 64859,
                                  "scheduledDeparture": 64859,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230358",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2047",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 66668,
                                  "realtimeDeparture": 66668,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 66668,
                                  "scheduledDeparture": 66668,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230360",
                                },
                              ],
                            },
                            Object {
                              "pattern": Object {
                                "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:01",
                              },
                              "times": Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2046",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 65759,
                                  "realtimeDeparture": 65759,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 65759,
                                  "scheduledDeparture": 65759,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230359",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2036",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 70028,
                                  "realtimeDeparture": 70028,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 70028,
                                  "scheduledDeparture": 70028,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230363",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2071",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 72436,
                                  "realtimeDeparture": 72436,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 72436,
                                  "scheduledDeparture": 72436,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230365",
                                },
                              ],
                            },
                          ],
                          "stopTimesLastUpdated": 1565051923389,
                          "type": 3,
                          "url": "http://trimet.org/#tracker/stop/715",
                        }
                      }
                      stopViewerConfig={
                        Object {
                          "nearbyRadius": 250,
                          "numberOfDepartures": 3,
                          "showBlockIds": false,
                          "timeRange": 345600,
                        }
                      }
                      toggleAutoRefresh={[Function]}
                      transitOperators={Array []}
                      viewedStop={
                        Object {
                          "stopId": "TriMet:715",
                        }
                      }
                    >
                      <div>
                        <injectIntl(PatternRow)
                          homeTimezone="America/Los_Angeles"
                          key="TriMet:20-Gresham TC"
                          pattern={
                            Object {
                              "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                              "headsign": "Gresham TC",
                              "id": "TriMet:20:1:04",
                            }
                          }
                          route={
                            Object {
                              "agencyName": "TriMet",
                              "id": "TriMet:20",
                              "longName": "Burnside/Stark",
                              "mode": "BUS",
                              "shortName": "20",
                              "sortOrder": 2600,
                              "sortOrderSet": true,
                              "type": 3,
                            }
                          }
                          stopTimes={
                            Array [
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2067",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 63959,
                                "realtimeDeparture": 63959,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 63959,
                                "scheduledDeparture": 63959,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230357",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2045",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 64859,
                                "realtimeDeparture": 64859,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 64859,
                                "scheduledDeparture": 64859,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230358",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2047",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 66668,
                                "realtimeDeparture": 66668,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 66668,
                                "scheduledDeparture": 66668,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230360",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2046",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 65759,
                                "realtimeDeparture": 65759,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 65759,
                                "scheduledDeparture": 65759,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230359",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2036",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 70028,
                                "realtimeDeparture": 70028,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 70028,
                                "scheduledDeparture": 70028,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230363",
                              },
                              Object {
                                "arrivalDelay": 0,
                                "blockId": "2071",
                                "departureDelay": 0,
                                "headsign": "Gresham TC",
                                "realtime": false,
                                "realtimeArrival": 72436,
                                "realtimeDeparture": 72436,
                                "realtimeState": "SCHEDULED",
                                "scheduledArrival": 72436,
                                "scheduledDeparture": 72436,
                                "serviceDay": 1564988400,
                                "stopCount": 132,
                                "stopId": "TriMet:715",
                                "stopIndex": 42,
                                "timepoint": false,
                                "tripId": "TriMet:9230365",
                              },
                            ]
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <PatternRow
                            homeTimezone="America/Los_Angeles"
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en-US",
                                "defaultRichTextElements": undefined,
                                "formatDate": [Function],
                                "formatDateTimeRange": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatList": [Function],
                                "formatListToParts": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en-US",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                                "wrapRichTextChunksInFragment": undefined,
                              }
                            }
                            pattern={
                              Object {
                                "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                "headsign": "Gresham TC",
                                "id": "TriMet:20:1:04",
                              }
                            }
                            route={
                              Object {
                                "agencyName": "TriMet",
                                "id": "TriMet:20",
                                "longName": "Burnside/Stark",
                                "mode": "BUS",
                                "shortName": "20",
                                "sortOrder": 2600,
                                "sortOrderSet": true,
                                "type": 3,
                              }
                            }
                            stopTimes={
                              Array [
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2067",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 63959,
                                  "realtimeDeparture": 63959,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 63959,
                                  "scheduledDeparture": 63959,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230357",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2045",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 64859,
                                  "realtimeDeparture": 64859,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 64859,
                                  "scheduledDeparture": 64859,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230358",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2047",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 66668,
                                  "realtimeDeparture": 66668,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 66668,
                                  "scheduledDeparture": 66668,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230360",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2046",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 65759,
                                  "realtimeDeparture": 65759,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 65759,
                                  "scheduledDeparture": 65759,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230359",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2036",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 70028,
                                  "realtimeDeparture": 70028,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 70028,
                                  "scheduledDeparture": 70028,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230363",
                                },
                                Object {
                                  "arrivalDelay": 0,
                                  "blockId": "2071",
                                  "departureDelay": 0,
                                  "headsign": "Gresham TC",
                                  "realtime": false,
                                  "realtimeArrival": 72436,
                                  "realtimeDeparture": 72436,
                                  "realtimeState": "SCHEDULED",
                                  "scheduledArrival": 72436,
                                  "scheduledDeparture": 72436,
                                  "serviceDay": 1564988400,
                                  "stopCount": 132,
                                  "stopId": "TriMet:715",
                                  "stopIndex": 42,
                                  "timepoint": false,
                                  "tripId": "TriMet:9230365",
                                },
                              ]
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <div
                              className="route-row"
                              role="table"
                            >
                              <div
                                className="header"
                                role="row"
                              >
                                <div
                                  className="route-name"
                                >
                                  <strong>
                                    <DefaultRouteRenderer
                                      leg={
                                        Object {
                                          "agencyName": "TriMet",
                                          "mode": "BUS",
                                          "routeColor": undefined,
                                          "routeLongName": "Burnside/Stark",
                                          "routeShortName": "20",
                                          "routeTextColor": undefined,
                                        }
                                      }
                                    >
                                      <styled.section
                                        color="333333"
                                      >
                                        <section
                                          className="sc-fmlJrY fflxRz"
                                          color="333333"
                                        >
                                          20
                                        </section>
                                      </styled.section>
                                    </DefaultRouteRenderer>
                                  </strong>
                                  <FormattedMessage
                                    id="components.PatternRow.routeName"
                                    values={
                                      Object {
                                        "headsign": "Gresham TC",
                                        "routeName": "",
                                        "strong": [Function],
                                      }
                                    }
                                  >
                                    components.PatternRow.routeName
                                  </FormattedMessage>
                                </div>
                                <div
                                  className="next-trip-preview"
                                  role="columnheader"
                                >
                                  <StopTimeCell
                                    homeTimezone="America/Los_Angeles"
                                    stopTime={
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2067",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 63959,
                                        "realtimeDeparture": 63959,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 63959,
                                        "scheduledDeparture": 63959,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230357",
                                      }
                                    }
                                  >
                                    <div>
                                      <div
                                        className="pull-left"
                                      >
                                        <Styled(styled.span)
                                          style={
                                            Object {
                                              "color": "#888",
                                              "fontSize": "0.8em",
                                              "marginRight": 2,
                                            }
                                          }
                                        >
                                          <span
                                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                            style={
                                              Object {
                                                "color": "#888",
                                                "fontSize": "0.8em",
                                                "marginRight": 2,
                                              }
                                            }
                                          >
                                            <Clock>
                                              <StyledIconBase
                                                iconAttrs={
                                                  Object {
                                                    "fill": "currentColor",
                                                    "xmlns": "http://www.w3.org/2000/svg",
                                                  }
                                                }
                                                iconVerticalAlign="middle"
                                                iconViewBox="0 0 512 512"
                                              >
                                                <ForwardRef
                                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                                  iconAttrs={
                                                    Object {
                                                      "fill": "currentColor",
                                                      "xmlns": "http://www.w3.org/2000/svg",
                                                    }
                                                  }
                                                  iconVerticalAlign="middle"
                                                  iconViewBox="0 0 512 512"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </ForwardRef>
                                              </StyledIconBase>
                                            </Clock>
                                          </span>
                                        </Styled(styled.span)>
                                      </div>
                                      <div
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginLeft": 20,
                                          }
                                        }
                                      >
                                        <div
                                          className="percy-hide"
                                          style={
                                            Object {
                                              "marginBottom": -4,
                                            }
                                          }
                                        >
                                          <FormattedDayOfWeek
                                            day="monday"
                                          >
                                            <FormattedMessage
                                              id="common.daysOfWeek.monday"
                                            >
                                              common.daysOfWeek.monday
                                            </FormattedMessage>
                                          </FormattedDayOfWeek>
                                        </div>
                                        <div
                                          className="percy-hide"
                                        >
                                          <DepartureTime
                                            realTime={true}
                                            stopTime={
                                              Object {
                                                "arrivalDelay": 0,
                                                "blockId": "2067",
                                                "departureDelay": 0,
                                                "headsign": "Gresham TC",
                                                "realtime": false,
                                                "realtimeArrival": 63959,
                                                "realtimeDeparture": 63959,
                                                "realtimeState": "SCHEDULED",
                                                "scheduledArrival": 63959,
                                                "scheduledDeparture": 63959,
                                                "serviceDay": 1564988400,
                                                "stopCount": 132,
                                                "stopId": "TriMet:715",
                                                "stopIndex": 42,
                                                "timepoint": false,
                                                "tripId": "TriMet:9230357",
                                              }
                                            }
                                          >
                                            <FormattedTime
                                              timeStyle="short"
                                              value={2019-08-06T00:45:59.000Z}
                                            >
                                              5:45 PM
                                            </FormattedTime>
                                          </DepartureTime>
                                        </div>
                                      </div>
                                    </div>
                                  </StopTimeCell>
                                </div>
                                <div
                                  className="expansion-button-container"
                                >
                                  <button
                                    aria-controls="route-20"
                                    aria-expanded={false}
                                    aria-label="components.PatternRow.collapseOrExpandDepartures"
                                    className="expansion-button"
                                    onClick={[Function]}
                                  >
                                    <styled.span>
                                      <span
                                        className="sc-gInthZ dOezsE"
                                      >
                                        <ChevronDown>
                                          <StyledIconBase
                                            iconAttrs={
                                              Object {
                                                "fill": "currentColor",
                                                "xmlns": "http://www.w3.org/2000/svg",
                                              }
                                            }
                                            iconVerticalAlign="middle"
                                            iconViewBox="0 0 448 512"
                                          >
                                            <ForwardRef
                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                              iconAttrs={
                                                Object {
                                                  "fill": "currentColor",
                                                  "xmlns": "http://www.w3.org/2000/svg",
                                                }
                                              }
                                              iconVerticalAlign="middle"
                                              iconViewBox="0 0 448 512"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="StyledIconBase-ea9ulj-0 iuNRof"
                                                fill="currentColor"
                                                focusable="false"
                                                viewBox="0 0 448 512"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M207.029 381.476 12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                                                  fill="currentColor"
                                                />
                                              </svg>
                                            </ForwardRef>
                                          </StyledIconBase>
                                        </ChevronDown>
                                      </span>
                                    </styled.span>
                                  </button>
                                </div>
                              </div>
                              <AnimateHeight
                                duration={500}
                                height={0}
                              >
                                <div
                                  aria-hidden={true}
                                  className="rah-static rah-static--height-zero "
                                  style={
                                    Object {
                                      "height": 0,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    style={Object {}}
                                  >
                                    <div
                                      id="route-20"
                                    >
                                      <div
                                        className="trip-table"
                                        role="table"
                                      >
                                        <div
                                          className="header"
                                          role="row"
                                        >
                                          <div
                                            className="cell"
                                            role="columnheader"
                                          />
                                          <div
                                            className="cell time-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.departure"
                                            >
                                              components.PatternRow.departure
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="columnheader"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.status"
                                            >
                                              components.PatternRow.status
                                            </FormattedMessage>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="0"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2067",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 63959,
                                                  "realtimeDeparture": 63959,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 63959,
                                                  "scheduledDeparture": 63959,
                                                  "serviceDay": 1564988400,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 42,
                                                  "timepoint": false,
                                                  "tripId": "TriMet:9230357",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="monday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.monday"
                                                      >
                                                        common.daysOfWeek.monday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2067",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 63959,
                                                          "realtimeDeparture": 63959,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 63959,
                                                          "scheduledDeparture": 63959,
                                                          "serviceDay": 1564988400,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 42,
                                                          "timepoint": false,
                                                          "tripId": "TriMet:9230357",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T00:45:59.000Z}
                                                      >
                                                        5:45 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="1"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2045",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 64859,
                                                  "realtimeDeparture": 64859,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 64859,
                                                  "scheduledDeparture": 64859,
                                                  "serviceDay": 1564988400,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 42,
                                                  "timepoint": false,
                                                  "tripId": "TriMet:9230358",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="monday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.monday"
                                                      >
                                                        common.daysOfWeek.monday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2045",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 64859,
                                                          "realtimeDeparture": 64859,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 64859,
                                                          "scheduledDeparture": 64859,
                                                          "serviceDay": 1564988400,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 42,
                                                          "timepoint": false,
                                                          "tripId": "TriMet:9230358",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T01:00:59.000Z}
                                                      >
                                                        6:00 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                        <div
                                          className="trip-row"
                                          key="2"
                                          role="row"
                                          style={
                                            Object {
                                              "display": "table-row",
                                              "fontSize": 14,
                                              "marginTop": 6,
                                            }
                                          }
                                        >
                                          <div
                                            className="cell"
                                            role="cell"
                                          >
                                            <FormattedMessage
                                              id="components.PatternRow.routeShort"
                                              values={
                                                Object {
                                                  "headsign": "Gresham TC",
                                                }
                                              }
                                            >
                                              components.PatternRow.routeShort
                                            </FormattedMessage>
                                          </div>
                                          <div
                                            className="cell time-column"
                                            role="cell"
                                          >
                                            <StopTimeCell
                                              homeTimezone="America/Los_Angeles"
                                              stopTime={
                                                Object {
                                                  "arrivalDelay": 0,
                                                  "blockId": "2046",
                                                  "departureDelay": 0,
                                                  "headsign": "Gresham TC",
                                                  "realtime": false,
                                                  "realtimeArrival": 65759,
                                                  "realtimeDeparture": 65759,
                                                  "realtimeState": "SCHEDULED",
                                                  "scheduledArrival": 65759,
                                                  "scheduledDeparture": 65759,
                                                  "serviceDay": 1564988400,
                                                  "stopCount": 132,
                                                  "stopId": "TriMet:715",
                                                  "stopIndex": 42,
                                                  "timepoint": false,
                                                  "tripId": "TriMet:9230359",
                                                }
                                              }
                                            >
                                              <div>
                                                <div
                                                  className="pull-left"
                                                >
                                                  <Styled(styled.span)
                                                    style={
                                                      Object {
                                                        "color": "#888",
                                                        "fontSize": "0.8em",
                                                        "marginRight": 2,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="sc-gInthZ sc-euMpEg dOezsE KEner"
                                                      style={
                                                        Object {
                                                          "color": "#888",
                                                          "fontSize": "0.8em",
                                                          "marginRight": 2,
                                                        }
                                                      }
                                                    >
                                                      <Clock>
                                                        <StyledIconBase
                                                          iconAttrs={
                                                            Object {
                                                              "fill": "currentColor",
                                                              "xmlns": "http://www.w3.org/2000/svg",
                                                            }
                                                          }
                                                          iconVerticalAlign="middle"
                                                          iconViewBox="0 0 512 512"
                                                        >
                                                          <ForwardRef
                                                            className="StyledIconBase-ea9ulj-0 iuNRof"
                                                            iconAttrs={
                                                              Object {
                                                                "fill": "currentColor",
                                                                "xmlns": "http://www.w3.org/2000/svg",
                                                              }
                                                            }
                                                            iconVerticalAlign="middle"
                                                            iconViewBox="0 0 512 512"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="StyledIconBase-ea9ulj-0 iuNRof"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </ForwardRef>
                                                        </StyledIconBase>
                                                      </Clock>
                                                    </span>
                                                  </Styled(styled.span)>
                                                </div>
                                                <div
                                                  style={
                                                    Object {
                                                      "fontSize": 12,
                                                      "marginLeft": 20,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="percy-hide"
                                                    style={
                                                      Object {
                                                        "marginBottom": -4,
                                                      }
                                                    }
                                                  >
                                                    <FormattedDayOfWeek
                                                      day="monday"
                                                    >
                                                      <FormattedMessage
                                                        id="common.daysOfWeek.monday"
                                                      >
                                                        common.daysOfWeek.monday
                                                      </FormattedMessage>
                                                    </FormattedDayOfWeek>
                                                  </div>
                                                  <div
                                                    className="percy-hide"
                                                  >
                                                    <DepartureTime
                                                      realTime={true}
                                                      stopTime={
                                                        Object {
                                                          "arrivalDelay": 0,
                                                          "blockId": "2046",
                                                          "departureDelay": 0,
                                                          "headsign": "Gresham TC",
                                                          "realtime": false,
                                                          "realtimeArrival": 65759,
                                                          "realtimeDeparture": 65759,
                                                          "realtimeState": "SCHEDULED",
                                                          "scheduledArrival": 65759,
                                                          "scheduledDeparture": 65759,
                                                          "serviceDay": 1564988400,
                                                          "stopCount": 132,
                                                          "stopId": "TriMet:715",
                                                          "stopIndex": 42,
                                                          "timepoint": false,
                                                          "tripId": "TriMet:9230359",
                                                        }
                                                      }
                                                    >
                                                      <FormattedTime
                                                        timeStyle="short"
                                                        value={2019-08-06T01:15:59.000Z}
                                                      >
                                                        6:15 PM
                                                      </FormattedTime>
                                                    </DepartureTime>
                                                  </div>
                                                </div>
                                              </div>
                                            </StopTimeCell>
                                          </div>
                                          <div
                                            className="cell status-column"
                                            role="cell"
                                          >
                                            <Connect(RealtimeStatusLabel)
                                              className="status-label"
                                              delay={0}
                                              isRealtime={false}
                                              withBackground={true}
                                            >
                                              <RealtimeStatusLabel
                                                className="status-label"
                                                delay={0}
                                                dispatch={[Function]}
                                                isRealtime={false}
                                                onTimeThresholdSeconds={60}
                                                withBackground={true}
                                              >
                                                <styled.div
                                                  className="status-label"
                                                  color="#6D6C6C"
                                                  withBackground={true}
                                                >
                                                  <div
                                                    className="sc-dUrmIn hjHlot status-label"
                                                    color="#6D6C6C"
                                                  >
                                                    <styled.div>
                                                      <div
                                                        className="sc-jmhFuu"
                                                      >
                                                        <FormattedRealtimeStatusLabel
                                                          minutes={<React.Fragment />}
                                                          status="scheduled"
                                                        >
                                                          <FormattedMessage
                                                            id="components.RealtimeStatusLabel.scheduled"
                                                          >
                                                            components.RealtimeStatusLabel.scheduled
                                                          </FormattedMessage>
                                                        </FormattedRealtimeStatusLabel>
                                                      </div>
                                                    </styled.div>
                                                  </div>
                                                </styled.div>
                                              </RealtimeStatusLabel>
                                            </Connect(RealtimeStatusLabel)>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </AnimateHeight>
                            </div>
                          </PatternRow>
                        </injectIntl(PatternRow)>
                      </div>
                      <div
                        style={
                          Object {
                            "marginTop": "20px",
                          }
                        }
                      >
                        <label
                          style={
                            Object {
                              "fontSize": "small",
                              "fontWeight": 300,
                            }
                          }
                        >
                          <styled.span
                            margin={0.25}
                          >
                            <span
                              className="sc-jXktde fKyBCi"
                            >
                              <input
                                name="autoUpdate"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </span>
                          </styled.span>
                          <FormattedMessage
                            id="components.LiveStopTimes.autoRefresh"
                          >
                            components.LiveStopTimes.autoRefresh
                          </FormattedMessage>
                        </label>
                        <button
                          className="link-button pull-right percy-hide"
                          onClick={[Function]}
                          style={
                            Object {
                              "fontSize": "small",
                            }
                          }
                        >
                          <IconWithText
                            Icon={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "Redo",
                                "render": [Function],
                              }
                            }
                            spin={true}
                          >
                            <Styled(styled.span)>
                              <span
                                className="sc-gInthZ sc-euMpEg dOezsE KEner"
                              >
                                <Redo>
                                  <StyledIconBase
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                        "xmlns": "http://www.w3.org/2000/svg",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 512 512"
                                  >
                                    <ForwardRef
                                      className="StyledIconBase-ea9ulj-0 iuNRof"
                                      iconAttrs={
                                        Object {
                                          "fill": "currentColor",
                                          "xmlns": "http://www.w3.org/2000/svg",
                                        }
                                      }
                                      iconVerticalAlign="middle"
                                      iconViewBox="0 0 512 512"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="StyledIconBase-ea9ulj-0 iuNRof"
                                        fill="currentColor"
                                        focusable="false"
                                        viewBox="0 0 512 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </ForwardRef>
                                  </StyledIconBase>
                                </Redo>
                              </span>
                            </Styled(styled.span)>
                            <FormattedTime
                              timeStyle="short"
                              timeZone="America/Los_Angeles"
                              value={1565051923389}
                            >
                              5:38 PM
                            </FormattedTime>
                          </IconWithText>
                        </button>
                        <RelatedStopsPanel
                          homeTimezone="America/Los_Angeles"
                          setHoveredStop={[Function]}
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Bench near stop",
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Lighting at stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                              ],
                              "code": "715",
                              "desc": "Eastbound stop in Portland (Stop ID 715)",
                              "id": "TriMet:715",
                              "lat": 45.522912,
                              "lon": -122.678538,
                              "mode": "BUS",
                              "name": "W Burnside & SW 8th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20, 36, 94",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Tualatin Park & Ride",
                                    "id": "TriMet:36:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3670",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 61740,
                                      "realtimeDeparture": 61740,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 61740,
                                      "scheduledDeparture": 61740,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231860",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565161200,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9468",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 52080,
                                      "realtimeDeparture": 52080,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 52080,
                                      "scheduledDeparture": 52080,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238187",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9372",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54120,
                                      "realtimeDeparture": 54120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54120,
                                      "scheduledDeparture": 54120,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238189",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9474",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 56880,
                                      "realtimeDeparture": 56880,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 56880,
                                      "scheduledDeparture": 56880,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238194",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "King City",
                                    "id": "TriMet:94:0:02",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565074800,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565161200,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565247600,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:03",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565074800,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565161200,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565247600,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2067",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 63959,
                                      "realtimeDeparture": 63959,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 63959,
                                      "scheduledDeparture": 63959,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230357",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2045",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 64859,
                                      "realtimeDeparture": 64859,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 64859,
                                      "scheduledDeparture": 64859,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230358",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2047",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 66668,
                                      "realtimeDeparture": 66668,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 66668,
                                      "scheduledDeparture": 66668,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230360",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2046",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 65759,
                                      "realtimeDeparture": 65759,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 65759,
                                      "scheduledDeparture": 65759,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230359",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2036",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 70028,
                                      "realtimeDeparture": 70028,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 70028,
                                      "scheduledDeparture": 70028,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230363",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2071",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 72436,
                                      "realtimeDeparture": 72436,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 72436,
                                      "scheduledDeparture": 72436,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230365",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565051923389,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/715",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <RelatedPanel
                            expanded={false}
                            onToggleExpanded={[Function]}
                            title={
                              <Memo(MemoizedFormattedMessage)
                                id="components.RelatedStopsPanel.relatedStops"
                              />
                            }
                            titleWidth="13ch"
                          >
                            <h4
                              className="related-panel-title"
                              style={
                                Object {
                                  "width": "13ch",
                                }
                              }
                            >
                              <FormattedMessage
                                id="components.RelatedStopsPanel.relatedStops"
                              >
                                components.RelatedStopsPanel.relatedStops
                              </FormattedMessage>
                            </h4>
                            <div
                              className="related-panel-container"
                            >
                              <ul
                                className="related-items-list list-unstyled"
                              />
                            </div>
                          </RelatedPanel>
                        </RelatedStopsPanel>
                        <Connect(injectIntl(AmenitiesPanel))
                          stopData={
                            Object {
                              "agencyName": "TriMet",
                              "amenities": Array [
                                "Bench near stop",
                                "Crosswalk near stop",
                                "Curb ramp near stop",
                                "Lighting at stop",
                                "Pavement at back door",
                                "Pavement at front door",
                                "Schedule display",
                                "Sidewalk at stop",
                              ],
                              "code": "715",
                              "desc": "Eastbound stop in Portland (Stop ID 715)",
                              "id": "TriMet:715",
                              "lat": 45.522912,
                              "lon": -122.678538,
                              "mode": "BUS",
                              "name": "W Burnside & SW 8th",
                              "routes": Array [
                                Object {
                                  "agencyName": "TriMet",
                                  "id": "TriMet:20",
                                  "longName": "Burnside/Stark",
                                  "mode": "BUS",
                                  "shortName": "20",
                                  "sortOrder": 2600,
                                  "sortOrderSet": true,
                                  "type": 3,
                                },
                              ],
                              "rsn": "20, 36, 94",
                              "stopTimes": Array [
                                Object {
                                  "pattern": Object {
                                    "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Tualatin Park & Ride",
                                    "id": "TriMet:36:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3670",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 61740,
                                      "realtimeDeparture": 61740,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 61740,
                                      "scheduledDeparture": 61740,
                                      "serviceDay": 1565074800,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231860",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "3668",
                                      "departureDelay": 0,
                                      "headsign": "Tualatin Park & Ride",
                                      "realtime": false,
                                      "realtimeArrival": 58260,
                                      "realtimeDeparture": 58260,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 58260,
                                      "scheduledDeparture": 58260,
                                      "serviceDay": 1565161200,
                                      "stopCount": 63,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9231858",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9468",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 52080,
                                      "realtimeDeparture": 52080,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 52080,
                                      "scheduledDeparture": 52080,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238187",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9372",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54120,
                                      "realtimeDeparture": 54120,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54120,
                                      "scheduledDeparture": 54120,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238189",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9474",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 56880,
                                      "realtimeDeparture": 56880,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 56880,
                                      "scheduledDeparture": 56880,
                                      "serviceDay": 1565074800,
                                      "stopCount": 40,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238194",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "King City",
                                    "id": "TriMet:94:0:02",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565074800,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565161200,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9472",
                                      "departureDelay": 0,
                                      "headsign": "King City",
                                      "realtime": false,
                                      "realtimeArrival": 55320,
                                      "realtimeDeparture": 55320,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 55320,
                                      "scheduledDeparture": 55320,
                                      "serviceDay": 1565247600,
                                      "stopCount": 23,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238192",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                    "headsign": "Sherwood",
                                    "id": "TriMet:94:0:03",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565074800,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565161200,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "9470",
                                      "departureDelay": 0,
                                      "headsign": "Sherwood",
                                      "realtime": false,
                                      "realtimeArrival": 54720,
                                      "realtimeDeparture": 54720,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 54720,
                                      "scheduledDeparture": 54720,
                                      "serviceDay": 1565247600,
                                      "stopCount": 34,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 0,
                                      "timepoint": true,
                                      "tripId": "TriMet:9238190",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:04",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2067",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 63959,
                                      "realtimeDeparture": 63959,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 63959,
                                      "scheduledDeparture": 63959,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230357",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2045",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 64859,
                                      "realtimeDeparture": 64859,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 64859,
                                      "scheduledDeparture": 64859,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230358",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2047",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 66668,
                                      "realtimeDeparture": 66668,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 66668,
                                      "scheduledDeparture": 66668,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230360",
                                    },
                                  ],
                                },
                                Object {
                                  "pattern": Object {
                                    "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                    "headsign": "Gresham TC",
                                    "id": "TriMet:20:1:01",
                                  },
                                  "times": Array [
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2046",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 65759,
                                      "realtimeDeparture": 65759,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 65759,
                                      "scheduledDeparture": 65759,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230359",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2036",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 70028,
                                      "realtimeDeparture": 70028,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 70028,
                                      "scheduledDeparture": 70028,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230363",
                                    },
                                    Object {
                                      "arrivalDelay": 0,
                                      "blockId": "2071",
                                      "departureDelay": 0,
                                      "headsign": "Gresham TC",
                                      "realtime": false,
                                      "realtimeArrival": 72436,
                                      "realtimeDeparture": 72436,
                                      "realtimeState": "SCHEDULED",
                                      "scheduledArrival": 72436,
                                      "scheduledDeparture": 72436,
                                      "serviceDay": 1564988400,
                                      "stopCount": 132,
                                      "stopId": "TriMet:715",
                                      "stopIndex": 42,
                                      "timepoint": false,
                                      "tripId": "TriMet:9230365",
                                    },
                                  ],
                                },
                              ],
                              "stopTimesLastUpdated": 1565051923389,
                              "type": 3,
                              "url": "http://trimet.org/#tracker/stop/715",
                            }
                          }
                          stopViewerConfig={
                            Object {
                              "nearbyRadius": 250,
                              "numberOfDepartures": 3,
                              "showBlockIds": false,
                              "timeRange": 345600,
                            }
                          }
                        >
                          <injectIntl(AmenitiesPanel)
                            stopData={
                              Object {
                                "agencyName": "TriMet",
                                "amenities": Array [
                                  "Bench near stop",
                                  "Crosswalk near stop",
                                  "Curb ramp near stop",
                                  "Lighting at stop",
                                  "Pavement at back door",
                                  "Pavement at front door",
                                  "Schedule display",
                                  "Sidewalk at stop",
                                ],
                                "code": "715",
                                "desc": "Eastbound stop in Portland (Stop ID 715)",
                                "id": "TriMet:715",
                                "lat": 45.522912,
                                "lon": -122.678538,
                                "mode": "BUS",
                                "name": "W Burnside & SW 8th",
                                "routes": Array [
                                  Object {
                                    "agencyName": "TriMet",
                                    "id": "TriMet:20",
                                    "longName": "Burnside/Stark",
                                    "mode": "BUS",
                                    "shortName": "20",
                                    "sortOrder": 2600,
                                    "sortOrderSet": true,
                                    "type": 3,
                                  },
                                ],
                                "rsn": "20, 36, 94",
                                "stopTimes": Array [
                                  Object {
                                    "pattern": Object {
                                      "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "Tualatin Park & Ride",
                                      "id": "TriMet:36:0:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3668",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 58260,
                                        "realtimeDeparture": 58260,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 58260,
                                        "scheduledDeparture": 58260,
                                        "serviceDay": 1565074800,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231858",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3670",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 61740,
                                        "realtimeDeparture": 61740,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 61740,
                                        "scheduledDeparture": 61740,
                                        "serviceDay": 1565074800,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231860",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "3668",
                                        "departureDelay": 0,
                                        "headsign": "Tualatin Park & Ride",
                                        "realtime": false,
                                        "realtimeArrival": 58260,
                                        "realtimeDeparture": 58260,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 58260,
                                        "scheduledDeparture": 58260,
                                        "serviceDay": 1565161200,
                                        "stopCount": 63,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9231858",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "Sherwood",
                                      "id": "TriMet:94:0:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9468",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 52080,
                                        "realtimeDeparture": 52080,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 52080,
                                        "scheduledDeparture": 52080,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238187",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9372",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54120,
                                        "realtimeDeparture": 54120,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54120,
                                        "scheduledDeparture": 54120,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238189",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9474",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 56880,
                                        "realtimeDeparture": 56880,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 56880,
                                        "scheduledDeparture": 56880,
                                        "serviceDay": 1565074800,
                                        "stopCount": 40,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238194",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "King City",
                                      "id": "TriMet:94:0:02",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565074800,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565161200,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9472",
                                        "departureDelay": 0,
                                        "headsign": "King City",
                                        "realtime": false,
                                        "realtimeArrival": 55320,
                                        "realtimeDeparture": 55320,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 55320,
                                        "scheduledDeparture": 55320,
                                        "serviceDay": 1565247600,
                                        "stopCount": 23,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238192",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                      "headsign": "Sherwood",
                                      "id": "TriMet:94:0:03",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9470",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54720,
                                        "realtimeDeparture": 54720,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54720,
                                        "scheduledDeparture": 54720,
                                        "serviceDay": 1565074800,
                                        "stopCount": 34,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238190",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9470",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54720,
                                        "realtimeDeparture": 54720,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54720,
                                        "scheduledDeparture": 54720,
                                        "serviceDay": 1565161200,
                                        "stopCount": 34,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238190",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "9470",
                                        "departureDelay": 0,
                                        "headsign": "Sherwood",
                                        "realtime": false,
                                        "realtimeArrival": 54720,
                                        "realtimeDeparture": 54720,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 54720,
                                        "scheduledDeparture": 54720,
                                        "serviceDay": 1565247600,
                                        "stopCount": 34,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 0,
                                        "timepoint": true,
                                        "tripId": "TriMet:9238190",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:04",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2067",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 63959,
                                        "realtimeDeparture": 63959,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 63959,
                                        "scheduledDeparture": 63959,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230357",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2045",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 64859,
                                        "realtimeDeparture": 64859,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 64859,
                                        "scheduledDeparture": 64859,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230358",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2047",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 66668,
                                        "realtimeDeparture": 66668,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 66668,
                                        "scheduledDeparture": 66668,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230360",
                                      },
                                    ],
                                  },
                                  Object {
                                    "pattern": Object {
                                      "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                      "headsign": "Gresham TC",
                                      "id": "TriMet:20:1:01",
                                    },
                                    "times": Array [
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2046",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 65759,
                                        "realtimeDeparture": 65759,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 65759,
                                        "scheduledDeparture": 65759,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230359",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2036",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 70028,
                                        "realtimeDeparture": 70028,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 70028,
                                        "scheduledDeparture": 70028,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230363",
                                      },
                                      Object {
                                        "arrivalDelay": 0,
                                        "blockId": "2071",
                                        "departureDelay": 0,
                                        "headsign": "Gresham TC",
                                        "realtime": false,
                                        "realtimeArrival": 72436,
                                        "realtimeDeparture": 72436,
                                        "realtimeState": "SCHEDULED",
                                        "scheduledArrival": 72436,
                                        "scheduledDeparture": 72436,
                                        "serviceDay": 1564988400,
                                        "stopCount": 132,
                                        "stopId": "TriMet:715",
                                        "stopIndex": 42,
                                        "timepoint": false,
                                        "tripId": "TriMet:9230365",
                                      },
                                    ],
                                  },
                                ],
                                "stopTimesLastUpdated": 1565051923389,
                                "type": 3,
                                "url": "http://trimet.org/#tracker/stop/715",
                              }
                            }
                            stopViewerConfig={
                              Object {
                                "nearbyRadius": 250,
                                "numberOfDepartures": 3,
                                "showBlockIds": false,
                                "timeRange": 345600,
                              }
                            }
                          >
                            <AmenitiesPanel
                              intl={
                                Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en-US",
                                  "defaultRichTextElements": undefined,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en-US",
                                  "messages": Object {},
                                  "onError": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              stopData={
                                Object {
                                  "agencyName": "TriMet",
                                  "amenities": Array [
                                    "Bench near stop",
                                    "Crosswalk near stop",
                                    "Curb ramp near stop",
                                    "Lighting at stop",
                                    "Pavement at back door",
                                    "Pavement at front door",
                                    "Schedule display",
                                    "Sidewalk at stop",
                                  ],
                                  "code": "715",
                                  "desc": "Eastbound stop in Portland (Stop ID 715)",
                                  "id": "TriMet:715",
                                  "lat": 45.522912,
                                  "lon": -122.678538,
                                  "mode": "BUS",
                                  "name": "W Burnside & SW 8th",
                                  "routes": Array [
                                    Object {
                                      "agencyName": "TriMet",
                                      "id": "TriMet:20",
                                      "longName": "Burnside/Stark",
                                      "mode": "BUS",
                                      "shortName": "20",
                                      "sortOrder": 2600,
                                      "sortOrderSet": true,
                                      "type": 3,
                                    },
                                  ],
                                  "rsn": "20, 36, 94",
                                  "stopTimes": Array [
                                    Object {
                                      "pattern": Object {
                                        "desc": "36 to Tualatin Park & Ride (TriMet:7879) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "Tualatin Park & Ride",
                                        "id": "TriMet:36:0:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "3668",
                                          "departureDelay": 0,
                                          "headsign": "Tualatin Park & Ride",
                                          "realtime": false,
                                          "realtimeArrival": 58260,
                                          "realtimeDeparture": 58260,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 58260,
                                          "scheduledDeparture": 58260,
                                          "serviceDay": 1565074800,
                                          "stopCount": 63,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9231858",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "3670",
                                          "departureDelay": 0,
                                          "headsign": "Tualatin Park & Ride",
                                          "realtime": false,
                                          "realtimeArrival": 61740,
                                          "realtimeDeparture": 61740,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 61740,
                                          "scheduledDeparture": 61740,
                                          "serviceDay": 1565074800,
                                          "stopCount": 63,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9231860",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "3668",
                                          "departureDelay": 0,
                                          "headsign": "Tualatin Park & Ride",
                                          "realtime": false,
                                          "realtimeArrival": 58260,
                                          "realtimeDeparture": 58260,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 58260,
                                          "scheduledDeparture": 58260,
                                          "serviceDay": 1565161200,
                                          "stopCount": 63,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9231858",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "94 to SW Railroad & Washington (TriMet:3670) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "Sherwood",
                                        "id": "TriMet:94:0:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9468",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 52080,
                                          "realtimeDeparture": 52080,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 52080,
                                          "scheduledDeparture": 52080,
                                          "serviceDay": 1565074800,
                                          "stopCount": 40,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238187",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9372",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54120,
                                          "realtimeDeparture": 54120,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54120,
                                          "scheduledDeparture": 54120,
                                          "serviceDay": 1565074800,
                                          "stopCount": 40,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238189",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9474",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 56880,
                                          "realtimeDeparture": 56880,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 56880,
                                          "scheduledDeparture": 56880,
                                          "serviceDay": 1565074800,
                                          "stopCount": 40,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238194",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "94 to SW Pacific Hwy & Durham (TriMet:8644) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "King City",
                                        "id": "TriMet:94:0:02",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9472",
                                          "departureDelay": 0,
                                          "headsign": "King City",
                                          "realtime": false,
                                          "realtimeArrival": 55320,
                                          "realtimeDeparture": 55320,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 55320,
                                          "scheduledDeparture": 55320,
                                          "serviceDay": 1565074800,
                                          "stopCount": 23,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238192",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9472",
                                          "departureDelay": 0,
                                          "headsign": "King City",
                                          "realtime": false,
                                          "realtimeArrival": 55320,
                                          "realtimeDeparture": 55320,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 55320,
                                          "scheduledDeparture": 55320,
                                          "serviceDay": 1565161200,
                                          "stopCount": 23,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238192",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9472",
                                          "departureDelay": 0,
                                          "headsign": "King City",
                                          "realtime": false,
                                          "realtimeArrival": 55320,
                                          "realtimeDeparture": 55320,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 55320,
                                          "scheduledDeparture": 55320,
                                          "serviceDay": 1565247600,
                                          "stopCount": 23,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238192",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "94 to SW Langer & Sherwood Plaza (TriMet:9188) from W Burnside & SW 8th (TriMet:715)",
                                        "headsign": "Sherwood",
                                        "id": "TriMet:94:0:03",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9470",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54720,
                                          "realtimeDeparture": 54720,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54720,
                                          "scheduledDeparture": 54720,
                                          "serviceDay": 1565074800,
                                          "stopCount": 34,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238190",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9470",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54720,
                                          "realtimeDeparture": 54720,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54720,
                                          "scheduledDeparture": 54720,
                                          "serviceDay": 1565161200,
                                          "stopCount": 34,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238190",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "9470",
                                          "departureDelay": 0,
                                          "headsign": "Sherwood",
                                          "realtime": false,
                                          "realtimeArrival": 54720,
                                          "realtimeDeparture": 54720,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 54720,
                                          "scheduledDeparture": 54720,
                                          "serviceDay": 1565247600,
                                          "stopCount": 34,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 0,
                                          "timepoint": true,
                                          "tripId": "TriMet:9238190",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:8199) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:04",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2067",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 63959,
                                          "realtimeDeparture": 63959,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 63959,
                                          "scheduledDeparture": 63959,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230357",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2045",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 64859,
                                          "realtimeDeparture": 64859,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 64859,
                                          "scheduledDeparture": 64859,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230358",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2047",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 66668,
                                          "realtimeDeparture": 66668,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 66668,
                                          "scheduledDeparture": 66668,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230360",
                                        },
                                      ],
                                    },
                                    Object {
                                      "pattern": Object {
                                        "desc": "20 to Gresham Transit Center (TriMet:2253) from Beaverton Transit Center (TriMet:9978) express",
                                        "headsign": "Gresham TC",
                                        "id": "TriMet:20:1:01",
                                      },
                                      "times": Array [
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2046",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 65759,
                                          "realtimeDeparture": 65759,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 65759,
                                          "scheduledDeparture": 65759,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230359",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2036",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 70028,
                                          "realtimeDeparture": 70028,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 70028,
                                          "scheduledDeparture": 70028,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230363",
                                        },
                                        Object {
                                          "arrivalDelay": 0,
                                          "blockId": "2071",
                                          "departureDelay": 0,
                                          "headsign": "Gresham TC",
                                          "realtime": false,
                                          "realtimeArrival": 72436,
                                          "realtimeDeparture": 72436,
                                          "realtimeState": "SCHEDULED",
                                          "scheduledArrival": 72436,
                                          "scheduledDeparture": 72436,
                                          "serviceDay": 1564988400,
                                          "stopCount": 132,
                                          "stopId": "TriMet:715",
                                          "stopIndex": 42,
                                          "timepoint": false,
                                          "tripId": "TriMet:9230365",
                                        },
                                      ],
                                    },
                                  ],
                                  "stopTimesLastUpdated": 1565051923389,
                                  "type": 3,
                                  "url": "http://trimet.org/#tracker/stop/715",
                                }
                              }
                              stopViewerConfig={
                                Object {
                                  "nearbyRadius": 250,
                                  "numberOfDepartures": 3,
                                  "showBlockIds": false,
                                  "timeRange": 345600,
                                }
                              }
                            >
                              <RelatedPanel
                                expanded={false}
                                onToggleExpanded={[Function]}
                                title="components.AmenitiesPanel.nearbyAmenities"
                                titleWidth="16ch"
                              >
                                <h4
                                  className="related-panel-title"
                                  style={
                                    Object {
                                      "width": "16ch",
                                    }
                                  }
                                >
                                  components.AmenitiesPanel.nearbyAmenities
                                </h4>
                                <div
                                  className="related-panel-container"
                                >
                                  <ul
                                    className="related-items-list list-unstyled"
                                  >
                                    <li
                                      className="related-item"
                                    >
                                      <div
                                        className="item-label"
                                      >
                                        <styled.div>
                                          <div
                                            className="sc-eFuaqX eZHYvB"
                                          >
                                            P
                                          </div>
                                        </styled.div>
                                        <FormattedMessage
                                          id="components.AmenitiesPanel.noPRLotsFound"
                                        >
                                          components.AmenitiesPanel.noPRLotsFound
                                        </FormattedMessage>
                                      </div>
                                    </li>
                                  </ul>
                                </div>
                              </RelatedPanel>
                            </AmenitiesPanel>
                          </injectIntl(AmenitiesPanel)>
                        </Connect(injectIntl(AmenitiesPanel))>
                      </div>
                    </LiveStopTimes>
                  </div>
                </styled.div>
              </div>
            </div>
          </StopViewer>
        </Connect(StopViewer)>
      </WrappedComponent>
    </injectIntl(WrappedComponent)>
  </Provider>
</IntlProvider>
`;

exports[`components > viewers > stop viewer should render with initial stop id and no stop times 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en-US"
  formats={Object {}}
  locale="en-US"
  messages={Object {}}
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <injectIntl(WrappedComponent)>
      <WrappedComponent
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en-US",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en-US",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
      >
        <Connect(StopViewer)
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en-US",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en-US",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <StopViewer
            enableFavoriteStops={false}
            favoriteStops={Array []}
            fetchStopInfo={[Function]}
            findStopTimesForStop={[Function]}
            forgetStop={[Function]}
            homeTimezone="America/Los_Angeles"
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en-US",
                "defaultRichTextElements": undefined,
                "formatDate": [Function],
                "formatDateTimeRange": [Function],
                "formatDateToParts": [Function],
                "formatDisplayName": [Function],
                "formatList": [Function],
                "formatListToParts": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getDisplayNames": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {},
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
                "wrapRichTextChunksInFragment": undefined,
              }
            }
            rememberStop={[Function]}
            setHoveredStop={[Function]}
            setLocation={[Function]}
            setMainPanelContent={[Function]}
            showNearbyStops={true}
            stopViewerConfig={
              Object {
                "nearbyRadius": 250,
                "numberOfDepartures": 3,
                "showBlockIds": false,
                "timeRange": 345600,
              }
            }
            toggleAutoRefresh={[Function]}
            transitOperators={Array []}
            viewedStop={
              Object {
                "stopId": "TriMet:13170",
              }
            }
            zoomToStop={[Function]}
          >
            <div
              className="stop-viewer"
            >
              <div
                className="stop-viewer-header"
              >
                <div
                  className="back-button-container"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="btn btn-sm btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <IconWithText
                        Icon={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "displayName": "ArrowLeft",
                            "render": [Function],
                          }
                        }
                      >
                        <Styled(styled.span)>
                          <span
                            className="sc-gInthZ sc-euMpEg dOezsE KEner"
                          >
                            <ArrowLeft>
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                    "xmlns": "http://www.w3.org/2000/svg",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 448 512"
                              >
                                <ForwardRef
                                  className="StyledIconBase-ea9ulj-0 iuNRof"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                      "xmlns": "http://www.w3.org/2000/svg",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 448 512"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="StyledIconBase-ea9ulj-0 iuNRof"
                                    fill="currentColor"
                                    focusable="false"
                                    viewBox="0 0 448 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="m257.5 445.1-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledIconBase>
                            </ArrowLeft>
                          </span>
                        </Styled(styled.span)>
                        <FormattedMessage
                          id="common.forms.back"
                        >
                          common.forms.back
                        </FormattedMessage>
                      </IconWithText>
                    </button>
                  </Button>
                </div>
                <div
                  className="header-text"
                >
                  <span>
                    <FormattedMessage
                      id="components.StopViewer.loadingText"
                    >
                      components.StopViewer.loadingText
                    </FormattedMessage>
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "clear": "both",
                    }
                  }
                />
              </div>
            </div>
          </StopViewer>
        </Connect(StopViewer)>
      </WrappedComponent>
    </injectIntl(WrappedComponent)>
  </Provider>
</IntlProvider>
`;
